{"ast":null,"code":"import axios from 'axios';\nimport eventHub from '../../../cloud-his/CloudHIS-Auth-Front/src/components/eventHub';\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'LoginPage',\n\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n\n  methods: {\n    login() {\n      axios.post('/auth/api/user/login/', {\n        \"username\": this.username,\n        \"password\": this.password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          // NOTE: expires 설정이 안됨 -> cookie expires를 쓰는게 아니라, 요청을 보내기 전에 exp값\n          // 을 확인해서 refresh 하도록 하자\n          Cookies.set('access', res.data.access);\n          Cookies.set('refresh', res.data.refresh);\n          eventHub.$emit('login');\n          alert('로그인 성공');\n          this.$router.push('/auth/home');\n        }\n      }).catch(err => {\n        console.log(err);\n\n        if (err.response.status === 400) {\n          alert(JSON.stringify(err.response.data));\n        } else {\n          alert('알수없는 에러입니다');\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiEA;AACA;AACA;AAGA;EACAA,iBADA;;EAGAC;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CARA;;EAUAC;IACAC;MACAC,oCACA;QACA,yBADA;QAEA;MAFA,CADA,EAKA;QACAC;UACA;QADA;MADA,CALA,EAWAC,IAXA,CAWAC;QACA;UACA;UACA;UACAC;UACAA;UAEAC;UAEAC;UACA;QACA;MACA,CAvBA,EAwBAC,KAxBA,CAwBAC;QACAC;;QACA;UACAH;QACA,CAFA,MAEA;UACAA;QACA;MACA,CA/BA;IAgCA;;EAlCA;AAVA","names":["name","data","username","password","methods","login","axios","headers","then","res","Cookies","eventHub","alert","catch","err","console"],"sourceRoot":"src/components","sources":["LoginPage.vue"],"sourcesContent":["<template>\n  <section class=\"\">\n    <div class=\"flex flex-col items-center justify-center px-6 py-8 mx-auto lg:py-0\">\n      <div\n        class=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n        <div class=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n          <h1 class=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n            로그인\n          </h1>\n\n          <form class=\"space-y-4 md:space-y-6\" action=\"#\">\n            <div>\n              <label for=\"username\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                사용자 ID\n              </label>\n              <input type=\"username\" name=\"username\" id=\"username\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"사용자 ID\" required=\"\" v-model=\"username\">\n            </div>\n            <div>\n              <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                비밀번호\n              </label>\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                required=\"\" v-model=\"password\">\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-start\">\n                <div class=\"flex items-center h-5\">\n                  <input id=\"remember\" aria-describedby=\"remember\" type=\"checkbox\"\n                    class=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800\"\n                    required=\"\">\n                </div>\n                <div class=\"ml-3 text-sm\">\n                  <label for=\"remember\" class=\"text-gray-500 dark:text-gray-300\">\n                    로그인 유지\n                  </label>\n                </div>\n              </div>\n              <a href=\"#\" class=\"text-sm font-medium text-primary-600 hover:underline dark:text-primary-500\">\n                비밀번호 찾기\n              </a>\n            </div>\n            <button\n              class=\"w-full text-white bg-blue-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n              @click=\"login\">\n              로그인\n            </button>\n            <p class=\"text-sm font-light text-gray-500 dark:text-gray-400\">\n              아직 계정이 없으시다면\n              <router-link to=\"/signup\"\n                           class=\"font-medium text-primary-600 hover:underline dark:text-primary-500\">\n                여기를 클릭\n              </router-link>\n            </p>\n          </form>\n\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from 'axios'\nimport eventHub from '../../../cloud-his/CloudHIS-Auth-Front/src/components/eventHub'\nimport Cookies from 'js-cookie'\n\n\nexport default {\n  name: 'LoginPage',\n\n  data() {\n    return {\n      username: '',\n      password: '',\n    };\n  },\n\n  methods: {\n    login() {\n      axios.post('/auth/api/user/login/',\n          {\n            \"username\": this.username,\n            \"password\": this.password,\n          },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      )\n        .then((res) => {\n          if (res.status === 200) {\n            // NOTE: expires 설정이 안됨 -> cookie expires를 쓰는게 아니라, 요청을 보내기 전에 exp값\n            // 을 확인해서 refresh 하도록 하자\n            Cookies.set('access', res.data.access);\n            Cookies.set('refresh', res.data.refresh);\n            \n            eventHub.$emit('login');\n            \n            alert('로그인 성공');\n            this.$router.push('/auth/home');\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          if (err.response.status === 400) {\n            alert(JSON.stringify(err.response.data));\n          } else {\n            alert('알수없는 에러입니다');\n          }\n        });\n    },\n  },\n};\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}