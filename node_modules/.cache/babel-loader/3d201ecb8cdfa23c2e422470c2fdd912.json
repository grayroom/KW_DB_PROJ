{"ast":null,"code":"import Document from '@tiptap/extension-document';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Text from '@tiptap/extension-text';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport { Editor, EditorContent } from '@tiptap/vue-2';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { radioSelect as RadioSelect, dropdownSelect as DropdownSelect, editable as Editable } from './Extension.js';\nexport default {\n  components: {\n    EditorContent\n  },\n\n  data() {\n    return {\n      editor: null\n    };\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      extensions: [Document, Paragraph, Text, RadioSelect, DropdownSelect, Editable, Placeholder.configure({\n        placeholder: '양식을 작성해주세요'\n      }), HardBreak, HorizontalRule]\n    });\n  },\n\n  methods: {\n    insertRadio() {\n      this.editor.commands.insertContent('<radio-select count = \"0\" na = ' + uuidv4() + // random and for unique name(radio button group)\n      '></radio-select><editable><p>항목명을 명시하세요</p></editable>');\n      this.editor.chain().focus().setHorizontalRule().run(); // this.editor.commands.setHardBreak()\n    },\n\n    insertDropdown() {\n      this.editor.commands.insertContent('<dropdown-select></dropdown-select><editable><p>항목명을 명시하세요</p></editable>');\n      this.editor.chain().focus().setHorizontalRule().run(); // this.editor.commands.setHardBreak()\n    },\n\n    insertHr() {\n      this.editor.chain().focus().setHorizontalRule().run();\n    },\n\n    // put editor data with axios\n    putData() {\n      axios.post('http://127.0.0.1:8000/templates/', {\n        content: this.editor.getJSON()\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    toggleModal() {\n      // toggle default modal's aria-hidden attribute and class named hidden\n      this.$refs.defaultModal.toggleAttribute('aria-hidden');\n      this.$refs.defaultModal.classList.toggle('hidden');\n    }\n\n  },\n\n  beforeUnmount() {\n    this.editor.destroy();\n  }\n\n};","map":{"version":3,"mappings":"AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,SACAA,0BADA,EAEAC,gCAFA,EAGAC,oBAHA,QAIA,gBAJA;AAMA;EACAC;IACAC;EADA,CADA;;EAKAC;IACA;MACAC;IADA;EAGA,CATA;;EAWAC;IACA;MACAC,aACAC,QADA,EAEAC,SAFA,EAGAC,IAHA,EAIAC,WAJA,EAKAC,cALA,EAMAC,QANA,EAOAC;QACAC;MADA,EAPA,EAUAC,SAVA,EAWAC,cAXA;IADA;EAeA,CA3BA;;EA6BAC;IACAC;MACA,mCACA,oCACAC,QADA,GACA;MACA,wDAHA;MAIA,sDALA,CAMA;IACA,CARA;;IASAC;MACA,mCACA,2EADA;MAEA,sDAHA,CAIA;IACA,CAdA;;IAeAC;MACA;IACA,CAjBA;;IAmBA;IACAC;MACAC;QACAC;MADA,GAGA;QACAC;UACA;QADA;MADA,CAHA,EAQAC,IARA,CAQAC;QACAC;MACA,CAVA,EAWAC,KAXA,CAWAC;QACAF;MACA,CAbA;IAcA,CAnCA;;IAqCAG;MACA;MACA;MACA;IACA;;EAzCA,CA7BA;;EAyEAC;IACA;EACA;;AA3EA","names":["radioSelect","dropdownSelect","editable","components","EditorContent","data","editor","mounted","extensions","Document","Paragraph","Text","RadioSelect","DropdownSelect","Editable","Placeholder","placeholder","HardBreak","HorizontalRule","methods","insertRadio","uuidv4","insertDropdown","insertHr","putData","axios","content","headers","then","response","console","catch","error","toggleModal","beforeUnmount"],"sourceRoot":"src/components","sources":["EmrEditor.vue"],"sourcesContent":["<template>\n  <div class=\"p-4 editor\">\n    <div class=\"editor__buttons--navbar mb-1 flex gap-1\">\n      <button class=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\" @click=\"insertRadio\">\n        양성/음성 선택\n      </button>\n      <button class=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\" @click=\"insertDropdown\">\n        목록 선택\n      </button>\n      <button class=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\">\n        일반텍스트\n      </button>\n      <button class=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\" @click=\"insertHr\">\n        구분선 추가\n      </button>\n    </div>\n\n    <editor-content :editor=\"editor\" class=\"\" />\n\n    <div class=\"editor__buttons--footer mt-1 flex gap-1\">\n      <button outlined\n        class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n        @click=\"toggleModal\">\n        서식 저장하기\n      </button>\n    </div>\n\n    <!-- Modal container -->\n    <div tabindex=\"-1\" aria-hidden=\"true\" ref=\"defaultModal\"\n      class=\"hidden overflow-y-auto overflow-x-hidden fixed z-50 w-full md:inset-0 h-modal md:h-full\">\n      <div class=\"relative p-4 w-full max-w-2xl h-full md:h-auto m-auto\">\n        <!-- Modal content -->\n        <div class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n          <!-- Modal header -->\n          <div class=\"flex justify-between items-start p-4 rounded-t border-b dark:border-gray-600\">\n            <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              양식 생성하기\n            </h3>\n            <button @click=\"toggleModal\"\n              class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\">\n              <svg aria-hidden=\"true\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clip-rule=\"evenodd\"></path>\n              </svg>\n              <span class=\"sr-only\">닫기</span>\n            </button>\n          </div>\n          <!-- Modal body -->\n          <div class=\"p-6 space-y-6\">\n            <div class=\"mb-6\">\n              <label for=\"email\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                양식 이름\n              </label>\n              <input type=\"email\" id=\"email\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"양식 이름을 정해주세요\" required>\n            </div>\n          </div>\n          <!-- Modal footer -->\n          <div class=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n            <button\n              class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              @click=\"putData\">\n              승인</button>\n            <button @click=\"toggleModal\" outlined\n              class=\"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600\">\n              취소</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Document from '@tiptap/extension-document'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport Text from '@tiptap/extension-text'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport { Editor, EditorContent } from '@tiptap/vue-2'\nimport HardBreak from '@tiptap/extension-hard-break'\nimport HorizontalRule from '@tiptap/extension-horizontal-rule'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\n\nimport {\n  radioSelect as RadioSelect,\n  dropdownSelect as DropdownSelect,\n  editable as Editable\n} from './Extension.js'\n\nexport default {\n  components: {\n    EditorContent,\n  },\n\n  data() {\n    return {\n      editor: null,\n    }\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      extensions: [\n        Document,\n        Paragraph,\n        Text,\n        RadioSelect,\n        DropdownSelect,\n        Editable,\n        Placeholder.configure({\n          placeholder: '양식을 작성해주세요',\n        }),\n        HardBreak,\n        HorizontalRule,\n      ]\n    })\n  },\n\n  methods: {\n    insertRadio() {\n      this.editor.commands.insertContent(\n        '<radio-select count = \"0\" na = ' +\n        uuidv4() + // random and for unique name(radio button group)\n        '></radio-select><editable><p>항목명을 명시하세요</p></editable>')\n      this.editor.chain().focus().setHorizontalRule().run()\n      // this.editor.commands.setHardBreak()\n    },\n    insertDropdown() {\n      this.editor.commands.insertContent(\n        '<dropdown-select></dropdown-select><editable><p>항목명을 명시하세요</p></editable>')\n      this.editor.chain().focus().setHorizontalRule().run()\n      // this.editor.commands.setHardBreak()\n    },\n    insertHr() {\n      this.editor.chain().focus().setHorizontalRule().run()\n    },\n\n    // put editor data with axios\n    putData() {\n      axios.post('http://127.0.0.1:8000/templates/', {\n        content: this.editor.getJSON()\n      },\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          console.log(response)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    },\n\n    toggleModal() {\n      // toggle default modal's aria-hidden attribute and class named hidden\n      this.$refs.defaultModal.toggleAttribute('aria-hidden')\n      this.$refs.defaultModal.classList.toggle('hidden')\n    }\n  },\n\n  beforeUnmount() {\n    this.editor.destroy()\n  },\n}\n</script>\n\n<style lang=\"scss\">\nbutton {\n  line-break: nowrap;\n}\n\n/* Basic editor styles */\n.ProseMirror {\n  padding: 1rem;\n  border: 1px solid #94a3b8;\n  height: 100%;\n\n  >hr {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n}\n\n/* Basic editor styles */\n\n/* Placeholder (at the top) */\n.ProseMirror p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\nhr.ProseMirror-selectednode {\n  border-top: 1px solid #68CEF8;\n}\n</style>"]},"metadata":{},"sourceType":"module"}