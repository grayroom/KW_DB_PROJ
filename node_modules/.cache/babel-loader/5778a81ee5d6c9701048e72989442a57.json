{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PasswordFindPage',\n  watch: {\n    newPw: function () {\n      this.validatePw();\n    },\n    newPw2: function () {\n      this.validatePw();\n    }\n  },\n\n  data() {\n    return {\n      id: '',\n      user_name: '',\n      phone_num: '',\n      temp_validation_key: '',\n      newPw: '',\n      newPw2: '',\n      pwValid: false,\n      pwValidAlert: ''\n    };\n  },\n\n  methods: {\n    getValidation() {\n      axios.post('/api/login/temp-validation', {\n        id: this.id,\n        user_name: this.user_name,\n        phone_num: this.phone_num\n      }).then(res => {\n        alert(\"인증완료\");\n        this.temp_validation_key = res.data;\n      }).catch(error => {\n        this.temp_validation_key = \"\";\n        console.log(error);\n      });\n    },\n\n    validatePw() {\n      if (this.newPw === this.newPw2) {\n        this.pwValid = true;\n        this.pwValidAlert = '';\n      } else {\n        this.pwValid = false;\n        this.pwValidAlert = '비밀번호가 일치하지 않습니다.';\n      }\n    },\n\n    submitNewPw() {\n      if (this.pwValid) {\n        axios.post('/api/login/reset-pw', {\n          id: this.id,\n          temp_validation_key: this.temp_validation_key,\n          newPw: this.newPw\n        }).then(() => {\n          alert(\"비밀번호 변경 완료\");\n          this.$router.push('/login');\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert(\"비밀번호가 일치하지 않습니다.\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4EA;AAGA;EACAA,wBADA;EAGAC;IACAC;MACA;IACA,CAHA;IAKAC;MACA;IACA;EAPA,CAHA;;EAaAC;IACA;MACAC,MADA;MAEAC,aAFA;MAGAC,aAHA;MAKAC,uBALA;MAOAN,SAPA;MAQAC,UARA;MASAM,cATA;MAUAC;IAVA;EAYA,CA1BA;;EA4BAC;IACAC;MACAC;QACAR,WADA;QAEAC,yBAFA;QAGAC;MAHA,GAIAO,IAJA,CAIAC;QACAC;QACA;MACA,CAPA,EAOAC,KAPA,CAOAC;QACA;QACAC;MACA,CAVA;IAWA,CAbA;;IAeAC;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CAvBA;;IAyBAC;MACA;QACAR;UACAR,WADA;UAEAG,6CAFA;UAGAN;QAHA,GAIAY,IAJA,CAIA;UACAE;UACA;QACA,CAPA,EAOAC,KAPA,CAOAC;UACAC;QACA,CATA;MAUA,CAXA,MAWA;QACAH;MACA;IACA;;EAxCA;AA5BA","names":["name","watch","newPw","newPw2","data","id","user_name","phone_num","temp_validation_key","pwValid","pwValidAlert","methods","getValidation","axios","then","res","alert","catch","error","console","validatePw","submitNewPw"],"sourceRoot":"src/components","sources":["PasswordFindPage.vue"],"sourcesContent":["<template>\n  <section class=\"\">\n    <div class=\"flex flex-col items-center justify-center px-6 py-8 mx-auto lg:py-0\">\n      <div\n          class=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n        <div class=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n          <h1 class=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n            비밀번호 찾기\n          </h1>\n\n          <div v-if=\"temp_validation_key === ''\" id=\"tempValidationContainer\" class=\"space-y-4 md:space-y-6\">\n            <div>\n              <label for=\"username\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                사용자 ID\n              </label>\n              <input type=\"username\" name=\"username\" id=\"username\"\n                     class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                     placeholder=\"사용자 ID\" required=\"\" v-model=\"id\">\n            </div>\n            <div>\n              <label for=\"password\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                이름\n              </label>\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\"\n                     class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                     required=\"\" v-model=\"user_name\">\n            </div>\n            <div>\n              <label for=\"phone_num\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                전화번호\n              </label>\n              <input type=\"text\" name=\"phone_num\" id=\"phone_num\" placeholder=\"••••••••\"\n                     class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                     required=\"\" v-model=\"phone_num\">\n            </div>\n            <button\n                class=\"w-full text-white bg-blue-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n                @click=\"getValidation\">\n              임시 인증요청\n            </button>\n          </div>\n          <div v-else id=\"newPwContainer\" class=\"space-y-4 md:space-y-6\">\n            <div>\n              <label for=\"newPw\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                {{ id }}의 새로운 비밀번호\n              </label>\n              <input type=\"password\" name=\"newPw\" id=\"newPw\"\n                     class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                     placeholder=\"비밀번호\" required=\"\" v-model=\"newPw\">\n            </div>\n            <div>\n              <label for=\"newPw2\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\n                비밀번호 확인\n              </label>\n              <input type=\"password\" name=\"newPw2\" id=\"newPw2\"\n                     class=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                     placeholder=\"비밀번호 확인\" required=\"\" v-model=\"newPw2\">\n            </div>\n\n            <p class=\"font-bold text-red-600\">\n              {{ pwValidAlert }}\n            </p>\n\n            <button\n                class=\"w-full text-white bg-blue-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\n                @click=\"submitNewPw\">\n              비밀번호 변경\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from 'axios'\n\n\nexport default {\n  name: 'PasswordFindPage',\n\n  watch: {\n    newPw: function() {\n      this.validatePw()\n    },\n\n    newPw2: function() {\n      this.validatePw()\n    }\n  },\n\n  data() {\n    return {\n      id: '',\n      user_name: '',\n      phone_num: '',\n\n      temp_validation_key: '',\n\n      newPw: '',\n      newPw2: '',\n      pwValid: false,\n      pwValidAlert: ''\n    };\n  },\n\n  methods: {\n    getValidation() {\n      axios.post('/api/login/temp-validation', {\n        id: this.id,\n        user_name: this.user_name,\n        phone_num: this.phone_num,\n      }).then((res) => {\n        alert(\"인증완료\")\n        this.temp_validation_key = res.data\n      }).catch((error) => {\n        this.temp_validation_key = \"\"\n        console.log(error);\n      });\n    },\n\n    validatePw() {\n      if(this.newPw === this.newPw2) {\n        this.pwValid = true\n        this.pwValidAlert = ''\n      } else {\n        this.pwValid = false\n        this.pwValidAlert = '비밀번호가 일치하지 않습니다.'\n      }\n    },\n\n    submitNewPw() {\n      if(this.pwValid) {\n        axios.post('/api/login/reset-pw', {\n          id: this.id,\n          temp_validation_key: this.temp_validation_key,\n          newPw: this.newPw,\n        }).then(() => {\n          alert(\"비밀번호 변경 완료\")\n          this.$router.push('/login')\n        }).catch((error) => {\n          console.log(error);\n        });\n      } else {\n        alert(\"비밀번호가 일치하지 않습니다.\")\n      }\n    }\n  },\n};\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}