{"ast":null,"code":"import { Editor, EditorContent } from \"@tiptap/vue-2\";\nimport Document from \"@tiptap/extension-document\";\nimport Paragraph from \"@tiptap/extension-paragraph\";\nimport Text from \"@tiptap/extension-text\";\nimport HardBreak from \"@tiptap/extension-hard-break\";\nimport HorizontalRule from \"@tiptap/extension-horizontal-rule\";\nimport axios from \"axios\";\nexport default {\n  name: \"ArticleViewerPage\",\n  components: {\n    EditorContent\n  },\n  watch: {\n    p_pre_script: function (newVal) {\n      this.editor.commands.setContent(newVal);\n    }\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      content: this.article_content,\n      editable: false,\n      onUpdate: () => {\n        this.$emit('input', this.editor.getHTML());\n      },\n      extensions: [Document, Paragraph, Text, HardBreak, HorizontalRule]\n    });\n    axios.get('/api/article/' + this.$route.params.articleIdx).then(response => {\n      this.title = response.data.title;\n      this.article_content = response.data.content;\n      this.editor.commands.setContent(this.article_content);\n      this.view_count = response.data.view_count;\n      this.writer = response.data.id;\n      this.author = response.data.user_name;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.getCommentList();\n  },\n\n  beforeDestroy() {\n    this.editor.destroy();\n  },\n\n  data() {\n    return {\n      editor: null,\n      title: \"dummy\",\n      article_content: \"dummy\",\n      view_count: 0,\n      writer: \"dummy\",\n      comment: \"\",\n      commentEditTarget: 0,\n      commentList: [{\n        userId: 1,\n        commentIdx: 1,\n        user: \"dummy\",\n        content: \"dummy\",\n        date: \"2022-01-01\"\n      }]\n    };\n  },\n\n  methods: {\n    addComment() {\n      axios.post('/api/comment', {\n        articleIdx: this.$route.params.articleIdx,\n        comment: this.comment\n      }).then(res => {\n        console.log(res);\n        this.getCommentList();\n      }).catch(error => {\n        alert(\"댓글 등록에 실패했습니다.\");\n        console.log(error);\n      });\n    },\n\n    deleteComment(commentIdx) {\n      axios.delete('/api/comment/' + commentIdx).then(res => {\n        console.log(res);\n        alert(\"댓글이 삭제되었습니다.\");\n        this.getCommentList();\n      }).catch(error => {\n        alert(\"댓글 삭제에 실패했습니다.\");\n        console.log(error);\n      });\n    },\n\n    editMode(commentIdx) {\n      this.commentEditTarget = commentIdx;\n      this.$forceUpdate();\n    },\n\n    updateComment(commentIdx) {\n      console.log(commentIdx);\n    },\n\n    getCommentList() {\n      axios.get('/api/comment/' + this.$route.params.articleIdx).then(response => {\n        this.commentList = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    deleteArticle() {\n      axios.delete('/api/article/' + this.$route.params.articleIdx).then(() => {\n        alert(\"게시글이 삭제되었습니다.\");\n        this.$router.push('/board');\n      }).catch(error => {\n        alert(\"게시글 삭제에 실패했습니다.\");\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA,yBADA;EAGAC;IACAC;EADA,CAHA;EAOAC;IACAC;MACA;IACA;EAHA,CAPA;;EAaAC;IACA;MACAC,6BADA;MAEAC,eAFA;MAGAC;QACA;MACA,CALA;MAMAC,aACAC,QADA,EAEAC,SAFA,EAGAC,IAHA,EAIAC,SAJA,EAKAC,cALA;IANA;IAeAC,2DACAC,IADA,CACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CARA,EASAC,KATA,CASAC;MACAC;IACA,CAXA;IAaA;EACA,CA3CA;;EA6CAC;IACA;EACA,CA/CA;;EAiDAC;IACA;MACAC,YADA;MAGAC,cAHA;MAIAC,wBAJA;MAKAC,aALA;MAMAC,eANA;MAQAC,WARA;MASAC,oBATA;MAWAC,cACA;QACAC,SADA;QAEAC,aAFA;QAGAC,aAHA;QAIA3B,gBAJA;QAKA4B;MALA,CADA;IAXA;EAqBA,CAvEA;;EAyEAC;IACAC;MACArB;QACAsB,yCADA;QAEAT;MAFA,GAIAZ,IAJA,CAIAsB;QACAlB;QACA;MACA,CAPA,EAQAF,KARA,CAQAC;QACAoB;QACAnB;MACA,CAXA;IAYA,CAdA;;IAgBAoB;MACAzB,2CACAC,IADA,CACAsB;QACAlB;QACAmB;QACA;MACA,CALA,EAMArB,KANA,CAMAC;QACAoB;QACAnB;MACA,CATA;IAUA,CA3BA;;IA6BAqB;MACA;MACA;IACA,CAhCA;;IAiCAC;MACAtB;IACA,CAnCA;;IAqCAuB;MACA5B,2DACAC,IADA,CACAC;QACA;MACA,CAHA,EAIAC,KAJA,CAIAC;QACAC;MACA,CANA;IAOA,CA7CA;;IA+CAwB;MACA7B,8DACAC,IADA,CACA;QACAuB;QACA;MACA,CAJA,EAKArB,KALA,CAKAC;QACAoB;QACAnB;MACA,CARA;IASA;;EAzDA;AAzEA","names":["name","components","EditorContent","watch","p_pre_script","mounted","content","editable","onUpdate","extensions","Document","Paragraph","Text","HardBreak","HorizontalRule","axios","then","response","catch","error","console","beforeDestroy","data","editor","title","article_content","view_count","writer","comment","commentEditTarget","commentList","userId","commentIdx","user","date","methods","addComment","articleIdx","res","alert","deleteComment","editMode","updateComment","getCommentList","deleteArticle"],"sourceRoot":"src/components","sources":["ArticleViewerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"max-w-[64rem] mx-auto\">\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-gray-300 mb-5 pb-5\n\t\t\t\t\t\tborder-gray-600 border-b \">\n        {{ title }} <span class=\"text-base\">by {{ author }}</span>\n      </h1>\n      <div class=\"flex mb-5\">\n        <div class=\"flex-1 min-w-[18rem] mx-auto flex flex-col gap-2\">\n          <label class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">내용</label>\n          <editor-content :editor=\"editor\"\n                          class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg focus:border focus:border-blue-500 focus:ring-blue-500  dark:bg-gray-900 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\n        </div>\n      </div>\n      <div id=\"toolbar\">\n        <router-link to=\"/board\">\n          <button type=\"button\" class=\"text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800\">\n            목록으로\n          </button>\n        </router-link>\n        <button type=\"button\" v-on:click=\"deleteArticle\" v-if=\"writer === $store.getters.getUserId ||\n          $store.getters.getPermission === 2\"\n                class=\"text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\">\n          삭제\n        </button>\n        <router-link :to=\"'/board/article/modify/' + this.$route.params.articleIdx\">\n          <button type=\"button\" v-if=\"writer === $store.getters.getUserId ||\n            $store.getters.getPermission === 2\"\n                  class=\"text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\">\n            수정\n          </button>\n        </router-link>\n      </div>\n      <div id=\"comment-container\" class=\"mt-5 pt-5 border-gray-600 border-t flex flex-col gap-5\">\n        <label class=\"block text-sm font-medium text-gray-900 dark:text-gray-400\">댓글</label>\n        <label for=\"default-search\" class=\"mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white\">Search</label>\n        <div class=\"relative\">\n          <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n            <svg aria-hidden=\"true\" class=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n          </div>\n          <input type=\"search\" id=\"default-search\" v-model=\"comment\"\n                 class=\"block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"댓글을 입력하세요\" required>\n          <button v-on:click=\"addComment\"\n                  class=\"text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\n            등록\n          </button>\n        </div>\n\n        <div id=\"prev-comment\">\n          <ul class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n            <li class=\"py-3 sm:pb-4\" v-for=\"cmt in commentList\" v-bind:key=\"cmt\">\n              <div class=\"flex flex-row items-center space-x-4\">\n                <div class=\"min-w-0 border-r-2 border-gray-300 px-4\">\n                  <p class=\"text-sm font-medium text-gray-900 truncate dark:text-white\">\n                    {{ cmt.user_name }}\n                  </p>\n                  <p class=\"text-sm text-gray-500 truncate dark:text-gray-400\">\n                    {{ cmt.user_id }}\n                  </p>\n                  <p v-if=\"cmt.userId === $store.getters.getUserId\" v-on:click=\"deleteComment(cmt.commentIdx)\">\n                    <i class=\"fa-solid fa-x text-red-900\"></i>\n                  </p>\n                </div>\n                <div v-if=\"commentEditTarget !== cmt.commentIdx\"\n                     class=\"flex-1 items-center text-base font-semibold text-gray-900 dark:text-white\">\n                  {{ cmt.content }}\n                </div>\n                <div v-else\n                     class=\"flex-1 items-center text-base font-semibold text-gray-900 dark:text-white\">\n                  <input type=\"search\" ref=\"updatedComment\" v-model=\"cmt.content\"\n                         class=\"block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"댓글을 입력하세요\" required>\n                </div>\n                <div v-if=\"commentEditTarget !== cmt.commentIdx\">\n                  <button type=\"button\" v-on:click=\"deleteComment(cmt.comment_idx)\" v-if=\"cmt.user_id ===\n                  $store.getters.getUserId ||\n          $store.getters.getPermission === 2\"\n                          class=\"text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\">\n                    삭제\n                  </button>\n                  <button type=\"button\" v-on:click=\"editMode(cmt.comment_idx)\" v-if=\"cmt.user_id ===\n                  $store.getters.getUserId ||\n          $store.getters.getPermission === 2\"\n                          class=\"text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\">\n                    수정\n                  </button>\n                </div>\n                <div v-else>\n                  <button type=\"button\" v-on:click=\"updateComment(cmt.comment_idx)\" v-if=\"cmt.user_id ===\n                  $store.getters.getUserId ||\n          $store.getters.getPermission === 2\"\n                          class=\"text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900\">\n                    삭제\n                  </button>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {Editor, EditorContent} from \"@tiptap/vue-2\";\nimport Document from \"@tiptap/extension-document\";\nimport Paragraph from \"@tiptap/extension-paragraph\";\nimport Text from \"@tiptap/extension-text\";\nimport HardBreak from \"@tiptap/extension-hard-break\";\nimport HorizontalRule from \"@tiptap/extension-horizontal-rule\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ArticleViewerPage\",\n\n  components: {\n    EditorContent\n  },\n\n  watch: {\n    p_pre_script: function (newVal) {\n      this.editor.commands.setContent(newVal)\n    },\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      content: this.article_content,\n      editable: false,\n      onUpdate: () => {\n        this.$emit('input', this.editor.getHTML())\n      },\n      extensions: [\n        Document,\n        Paragraph,\n        Text,\n        HardBreak,\n        HorizontalRule,\n      ]\n    })\n\n    axios.get('/api/article/' + this.$route.params.articleIdx)\n      .then(response => {\n        this.title = response.data.title\n        this.article_content = response.data.content\n        this.editor.commands.setContent(this.article_content)\n        this.view_count = response.data.view_count\n        this.writer = response.data.id\n        this.author = response.data.user_name\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    this.getCommentList()\n  },\n\n  beforeDestroy() {\n    this.editor.destroy()\n  },\n\n  data() {\n    return {\n      editor: null,\n\n      title: \"dummy\",\n      article_content: \"dummy\",\n      view_count: 0,\n      writer: \"dummy\",\n\n      comment: \"\",\n      commentEditTarget: 0,\n\n      commentList: [\n          {\n            userId: 1,\n            commentIdx: 1,\n            user: \"dummy\",\n            content: \"dummy\",\n            date: \"2022-01-01\"\n          }\n      ]\n    }\n  },\n\n  methods: {\n    addComment() {\n      axios.post('/api/comment', {\n        articleIdx: this.$route.params.articleIdx,\n        comment: this.comment\n      })\n        .then(res => {\n          console.log(res)\n          this.getCommentList()\n        })\n        .catch(error => {\n          alert(\"댓글 등록에 실패했습니다.\")\n          console.log(error)\n        })\n    },\n\n    deleteComment(commentIdx) {\n      axios.delete('/api/comment/' + commentIdx)\n        .then(res => {\n          console.log(res)\n          alert(\"댓글이 삭제되었습니다.\")\n          this.getCommentList()\n        })\n        .catch(error => {\n          alert(\"댓글 삭제에 실패했습니다.\")\n          console.log(error)\n        })\n    },\n\n    editMode(commentIdx) {\n      this.commentEditTarget = commentIdx\n      this.$forceUpdate()\n    },\n    updateComment(commentIdx) {\n      console.log(commentIdx)\n    },\n\n    getCommentList() {\n      axios.get('/api/comment/' + this.$route.params.articleIdx)\n          .then(response => {\n            this.commentList = response.data\n          })\n          .catch(error => {\n            console.log(error)\n          })\n    },\n\n    deleteArticle() {\n      axios.delete('/api/article/' + this.$route.params.articleIdx)\n          .then(() => {\n            alert(\"게시글이 삭제되었습니다.\")\n            this.$router.push('/board')\n          })\n          .catch(error => {\n            alert(\"게시글 삭제에 실패했습니다.\")\n            console.log(error)\n          })\n    }\n  }\n}\n</script>\n\n\n<style lang=\"scss\">\nbutton {\n  line-break: nowrap;\n}\n\n/* Basic editor styles */\n.ProseMirror {\n  padding: 1rem;\n  border: 1px solid #4b5563;\n  border-radius: 0.5rem;\n  height: 100%;\n\n  >hr {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n  .ProseMirror {\n    border-color: rgb(107 114 128);\n  }\n}\n\n/* Basic editor styles */\n\n/* Placeholder (at the top) */\n\n.ProseMirror p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #6B7280;\n  pointer-events: none;\n  height: 0;\n}\n\nhr.ProseMirror-selectednode {\n  border-top: 1px solid #68CEF8;\n}\n\n#defaultModal {\n  background: rgba($color: #000000, $alpha: 0.5);\n}\n\n.pr {\n  color: orange;\n}\n.te {\n  color: deepskyblue;\n}\n.tr {\n  color: lightgreen;\n}\n</style>"]},"metadata":{},"sourceType":"module"}