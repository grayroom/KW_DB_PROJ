{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // import eventHub from './eventHub';\n\nexport default {\n  name: 'AppNav',\n  methods: {\n    toggleMainMenu() {\n      this.$refs.mainMenu.toggleAttribute('aria-hidden');\n      this.$refs.mainMenu.classList.toggle('hidden');\n    },\n\n    toggleUserMenu() {\n      this.$refs.userMenu.toggleAttribute('aria-hidden');\n      this.$refs.userMenu.classList.toggle('hidden');\n    },\n\n    logout() {\n      const refreshToken = Cookies.get('refresh');\n      const accessToken = Cookies.get('access');\n      axios.post('/auth/api/user/logout/', {\n        \"refresh\": refreshToken\n      }, {\n        withCredentials: true,\n        crossDomain: true,\n        credentials: \"access\",\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n          ContentType: \"application/json\"\n        }\n      }).then(() => {\n        Cookies.remove('access');\n        Cookies.remove('refresh');\n        this.toggleUserMenu();\n        this.is_login = false;\n        this.$refs.username.innerHTML = \"Login needed.\";\n        this.$refs.useremail.innerHTML = \"\";\n        alert('logged out.');\n        this.$router.go('/emr/home');\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    getUserinfo(accessToken) {\n      axios.get('/auth/api/user/info/', {\n        withCredentials: true,\n        crossDomain: true,\n        credentials: \"access\",\n        headers: {\n          Authorization: \"Bearer \" + accessToken\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.$refs.username.innerHTML = response.data.name;\n        this.$refs.useremail.innerHTML = response.data.email;\n      }).catch(() => {\n        Cookies.remove('access');\n        Cookies.remove('refresh');\n        this.$refs.username.innerHTML = \"Login needed.\";\n        this.$refs.useremail.innerHTML = \"\";\n        this.is_login = false;\n      });\n    }\n\n  },\n\n  data() {\n    return {\n      is_login: false,\n      is_admin: false\n    };\n  },\n\n  watch: {\n    // TODO: 토큰이 있다면, 토큰이 만료되었는지 여부를 확인하고,,, refresh token까지 만료된 경우에는\n    // 로그아웃을 시키고,,, access token만 만료된 경우에는 refresh token으로 access token을 재발급 받아야함\n    $route(to, from) {\n      window.location.reload();\n      this.is_login = false;\n      this.is_admin = false;\n      if (to.path !== from.path) console.log('route changed');\n      const accessToken = Cookies.get('access');\n      const refreshToken = Cookies.get('refresh');\n\n      if (accessToken === undefined || refreshToken === undefined) {\n        this.$refs.username.innerHTML = \"Login needed.\";\n        this.$refs.useremail.innerHTML = \"\";\n        this.is_login = false;\n        Cookies.remove('access');\n        Cookies.remove('refresh');\n      } else {\n        this.is_login = true;\n        const accessTokenJSON = JSON.parse(atob(accessToken.split('.')[1]));\n\n        if (accessTokenJSON.authority >= 2) {\n          this.is_admin = true;\n        }\n\n        if (new Date(accessTokenJSON.exp * 1000) < new Date()) {\n          axios.post('/auth/api/token/refresh/', {\n            \"refresh\": refreshToken\n          }, {\n            withCredentials: true,\n            crossDomain: true,\n            credentials: \"access\",\n            headers: {\n              Authorization: \"Bearer \" + accessToken,\n              ContentType: \"application/json\"\n            }\n          }).then(response => {\n            Cookies.remove('access');\n            Cookies.remove('refresh');\n            Cookies.set('access', response.data.access);\n            Cookies.set('access', response.data.refresh);\n            this.getUserinfo(response.data.access);\n          }).catch(() => {\n            // NOTE: token validation failed...\n            Cookies.remove('access');\n            Cookies.remove('refresh');\n            this.$refs.username.innerHTML = \"Login needed.\";\n            this.$refs.useremail.innerHTML = \"\";\n            this.is_login = false;\n          });\n        } else {\n          this.getUserinfo(Cookies.get('access'));\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAkGA;AACA,gC,CACA;;AAGA;EACAA,cADA;EAGAC;IACAC;MACA;MACA;IACA,CAJA;;IAMAC;MACA;MACA;IACA,CATA;;IAWAC;MACA;MACA;MAEAC,qCACA;QACA;MADA,CADA,EAGA;QACAC,qBADA;QAEAC,iBAFA;QAGAC,qBAHA;QAIAC;UACAC,sCADA;UAEAC;QAFA;MAJA,CAHA,EAYAC,IAZA,CAYA;QACAC;QACAA;QACA;QACA;QACA;QACA;QACAC;QACA;MACA,CArBA,EAsBAC,KAtBA,CAsBAC;QACAC;MACA,CAxBA;IAyBA,CAxCA;;IA0CAC;MACAb,kCACA;QACAC,qBADA;QAEAC,iBAFA;QAGAC,qBAHA;QAIAC;UACAC;QADA;MAJA,CADA,EASAE,IATA,CASAO;QACAF;QACA;QACA;MACA,CAbA,EAcAF,KAdA,CAcA;QACAF;QACAA;QACA;QACA;QACA;MACA,CApBA;IAqBA;;EAhEA,CAHA;;EAsEAO;IACA;MACAC,eADA;MAEAC;IAFA;EAIA,CA3EA;;EA6EAC;IACA;IACA;IACAC;MACAC;MAEA;MACA;MAEA,2BACAR;MACA;MACA;;MAEA;QACA;QACA;QACA;QACAJ;QACAA;MACA,CANA,MAMA;QACA;QACA;;QAEA;UACA;QACA;;QACA;UACAR,uCACA;YACA;UADA,CADA,EAIA;YACAC,qBADA;YAEAC,iBAFA;YAGAC,qBAHA;YAIAC;cACAC,sCADA;cAEAC;YAFA;UAJA,CAJA,EAaAC,IAbA,CAaAO;YACAN;YACAA;YACAA;YACAA;YACA;UACA,CAnBA,EAoBAE,KApBA,CAoBA;YACA;YACAF;YACAA;YACA;YACA;YACA;UACA,CA3BA;QA4BA,CA7BA,MA6BA;UACA;QACA;MACA;IACA;;EA5DA;AA7EA","names":["name","methods","toggleMainMenu","toggleUserMenu","logout","axios","withCredentials","crossDomain","credentials","headers","Authorization","ContentType","then","Cookies","alert","catch","error","console","getUserinfo","response","data","is_login","is_admin","watch","$route","window"],"sourceRoot":"src/components","sources":["AppNav.vue"],"sourcesContent":["<template>\n  <div>\n    <nav class=\"bg-white border-gray-200 px-2 sm:px-4 py-2.5 dark:bg-gray-900\">\n      <div class=\"container flex flex-wrap justify-between items-center mx-auto\">\n        <a href=\"/\" class=\"self-center text-xl font-semibold whitespace-nowrap dark:text-white\">\n          KW stock trade\n        </a>\n        <div class=\"flex items-center md:order-2 gap-2\">\n          <button type=\"button\" @click=\"toggleMainMenu\"\n            class=\"inline-flex items-center p-2 ml-1 text-sm text-gray-500 rounded-lg  md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\">\n            <span class=\"sr-only\">Open main menu</span>\n            <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\"\n                d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                clip-rule=\"evenodd\"></path>\n            </svg>\n            <svg class=\"hidden w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"></path>\n            </svg>\n          </button>\n          <button type=\"button\"\n            class=\"flex mr-3 text-sm bg-gray-800 rounded-full md:mr-0 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600\"\n            id=\"user-menu-button\" @click=\"toggleUserMenu\">\n            <span class=\"sr-only\">Open user menu</span>\n            <svg class=\"w-8 h-8 p-1 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\">\n              </path>\n            </svg>\n          </button>\n          <!-- Dropdown menu -->\n          <div\n            class=\"z-50 my-4 text-base list-none bg-white rounded divide-y divide-gray-100 shadow dark:bg-gray-700 dark:divide-gray-600 hidden cursor-pointer select-none border border-gray-500\"\n            id=\"user-dropdown\" ref=\"userMenu\" aria-hidden=\"true\">\n            <div class=\"py-3 px-4\">\n              <span class=\"block text-sm text-gray-900 dark:text-white\" ref=\"username\"></span>\n              <span class=\"block text-sm font-medium text-gray-500 truncate dark:text-gray-400\" ref=\"useremail\"></span>\n            </div>\n            <ul v-if=\"is_login\" class=\"py-1\" aria-labelledby=\"user-menu-button\">\n              <li>\n                <a href=\"/info\"\n                  class=\"block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">\n                  my info\n                </a>\n              </li>\n              <li>\n                <a class=\"block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\n                  @click=\"logout\">\n                  logout\n                </a>\n              </li>\n            </ul>\n            <ul v-else class=\"py-1\" aria-labelledby=\"user-menu-button\">\n              <li @click=\"toggleUserMenu\">\n                <a href=\"/login\"\n                  class=\"block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\">\n                  login\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"justify-between items-center w-full md:flex md:w-auto md:order-1 hidden\" id=\"mobile-menu-2\"\n          ref=\"mainMenu\" aria-hidden>\n\n          <ul\n            class=\"flex flex-col p-4 mt-4 bg-gray-50 rounded-lg border border-gray-100 md:flex-row md:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700\">\n            <li>\n              <a href=\"/\"\n                class=\"block py-2 pr-4 pl-3 text-gray-700 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\"\n                aria-current=\"page\">Main</a>\n            </li>\n            <li>\n              <!-- FIXME: ClusterIP의 내부 도메인 이름으로 변경해서 접근 가능하도록 변경해야함 -->\n              <a href=\"/trade/\"\n                class=\"block py-2 pr-4 pl-3 text-gray-700 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">\n                주식거래\n              </a>\n            </li>\n            <li>\n              <!-- FIXME: ClusterIP의 내부 도메인 이름으로 변경해서 접근 가능하도록 변경해야함 -->\n              <a href=\"/board/\"\n                 class=\"block py-2 pr-4 pl-3 text-gray-700 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-gray-400 md:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\">\n                토론게시판\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </div>\n\n</template>\n\n<script>\n\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\n// import eventHub from './eventHub';\n\n\nexport default {\n  name: 'AppNav',\n\n  methods: {\n    toggleMainMenu() {\n      this.$refs.mainMenu.toggleAttribute('aria-hidden')\n      this.$refs.mainMenu.classList.toggle('hidden')\n    },\n\n    toggleUserMenu() {\n      this.$refs.userMenu.toggleAttribute('aria-hidden')\n      this.$refs.userMenu.classList.toggle('hidden')\n    },\n\n    logout() {\n      const refreshToken = Cookies.get('refresh')\n      const accessToken = Cookies.get('access')\n\n      axios.post('/auth/api/user/logout/',\n        {\n          \"refresh\": refreshToken\n        }, {\n        withCredentials: true,\n        crossDomain: true,\n        credentials: \"access\",\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n          ContentType: \"application/json\"\n        }\n      })\n        .then(() => {\n          Cookies.remove('access')\n          Cookies.remove('refresh')\n          this.toggleUserMenu()\n          this.is_login = false\n          this.$refs.username.innerHTML = \"Login needed.\"\n          this.$refs.useremail.innerHTML = \"\"\n          alert('logged out.')\n          this.$router.go('/emr/home');\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    },\n\n    getUserinfo(accessToken) {\n      axios.get('/auth/api/user/info/',\n        {\n          withCredentials: true,\n          crossDomain: true,\n          credentials: \"access\",\n          headers: {\n            Authorization: \"Bearer \" + accessToken,\n          }\n        })\n        .then((response) => {\n          console.log(response.data)\n          this.$refs.username.innerHTML = response.data.name\n          this.$refs.useremail.innerHTML = response.data.email\n        })\n        .catch(() => {\n          Cookies.remove('access')\n          Cookies.remove('refresh')\n          this.$refs.username.innerHTML = \"Login needed.\"\n          this.$refs.useremail.innerHTML = \"\"\n          this.is_login = false\n        })\n    }\n  },\n\n  data() {\n    return {\n      is_login: false,\n      is_admin: false,\n    }\n  },\n\n  watch: {\n    // TODO: 토큰이 있다면, 토큰이 만료되었는지 여부를 확인하고,,, refresh token까지 만료된 경우에는\n    // 로그아웃을 시키고,,, access token만 만료된 경우에는 refresh token으로 access token을 재발급 받아야함\n    $route(to, from) {\n      window.location.reload()\n\n      this.is_login = false\n      this.is_admin = false\n\n      if (to.path !== from.path)\n        console.log('route changed')\n      const accessToken = Cookies.get('access');\n      const refreshToken = Cookies.get('refresh');\n\n      if (accessToken === undefined || refreshToken === undefined) {\n        this.$refs.username.innerHTML = \"Login needed.\"\n        this.$refs.useremail.innerHTML = \"\"\n        this.is_login = false\n        Cookies.remove('access')\n        Cookies.remove('refresh')\n      } else {\n        this.is_login = true\n        const accessTokenJSON = JSON.parse(atob(accessToken.split('.')[1]));\n\n        if (accessTokenJSON.authority >= 2) {\n          this.is_admin = true\n        }\n        if (new Date(accessTokenJSON.exp * 1000) < new Date()) {\n          axios.post('/auth/api/token/refresh/',\n            {\n              \"refresh\": refreshToken,\n            },\n            {\n              withCredentials: true,\n              crossDomain: true,\n              credentials: \"access\",\n              headers: {\n                Authorization: \"Bearer \" + accessToken,\n                ContentType: \"application/json\"\n              }\n            })\n            .then((response) => {\n              Cookies.remove('access')\n              Cookies.remove('refresh')\n              Cookies.set('access', response.data.access)\n              Cookies.set('access', response.data.refresh)\n              this.getUserinfo(response.data.access)\n            })\n            .catch(() => {\n              // NOTE: token validation failed...\n              Cookies.remove('access')\n              Cookies.remove('refresh')\n              this.$refs.username.innerHTML = \"Login needed.\"\n              this.$refs.useremail.innerHTML = \"\"\n              this.is_login = false\n            })\n        } else {\n          this.getUserinfo(Cookies.get('access'))\n        }\n      }\n    }\n  },\n}\n\n</script>\n\n<style>\n#user-dropdown {\n  position: absolute;\n  inset: 0px auto auto 0px;\n  margin: 0px;\n  width: 170px;\n  transform: translate3d(calc(100vw - 200px), 82px, 0px);\n}\n\n* {\n  box-sizing: border-box;\n}\n</style>"]},"metadata":{},"sourceType":"module"}