{"ast":null,"code":"import Document from '@tiptap/extension-document';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Text from '@tiptap/extension-text';\nimport Placeholder from '@tiptap/extension-placeholder';\nimport { Editor, EditorContent } from '@tiptap/vue-2';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { radioSelect as RadioSelect, dropdownSelect as DropdownSelect, editable as Editable } from './Extension.js';\nexport default {\n  components: {\n    EditorContent\n  },\n\n  data() {\n    return {\n      editor: null,\n      viewModal: false\n    };\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      extensions: [Document, Paragraph, Text, RadioSelect, DropdownSelect, Editable, Placeholder.configure({\n        placeholder: '양식을 작성해주세요'\n      }), HardBreak, HorizontalRule]\n    });\n  },\n\n  methods: {\n    insertRadio() {\n      this.editor.commands.insertContent('<radio-select count = \"0\" na = ' + uuidv4() + // random and for unique name(radio button group)\n      '></radio-select><editable><p>항목명을 명시하세요</p></editable>');\n      this.editor.chain().focus().setHorizontalRule().run(); // this.editor.commands.setHardBreak()\n    },\n\n    insertDropdown() {\n      this.editor.commands.insertContent('<dropdown-select></dropdown-select><editable><p>항목명을 명시하세요</p></editable>');\n      this.editor.chain().focus().setHorizontalRule().run(); // this.editor.commands.setHardBreak()\n    },\n\n    insertHr() {\n      this.editor.chain().focus().setHorizontalRule().run();\n    },\n\n    // put editor data with axios\n    putData() {\n      axios.post('http://127.0.0.1:8000/templates/', {\n        content: this.editor.getJSON()\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n\n  beforeUnmount() {\n    this.editor.destroy();\n  }\n\n};","map":{"version":3,"mappings":"AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,SACAA,0BADA,EAEAC,gCAFA,EAGAC,oBAHA,QAIA,gBAJA;AAMA;EACAC;IACAC;EADA,CADA;;EAKAC;IACA;MACAC,YADA;MAEAC;IAFA;EAIA,CAVA;;EAYAC;IACA;MACAC,aACAC,QADA,EAEAC,SAFA,EAGAC,IAHA,EAIAC,WAJA,EAKAC,cALA,EAMAC,QANA,EAOAC;QACAC;MADA,EAPA,EAUAC,SAVA,EAWAC,cAXA;IADA;EAeA,CA5BA;;EA8BAC;IACAC;MACA,mCACA,oCACAC,QADA,GACA;MACA,wDAHA;MAIA,sDALA,CAMA;IACA,CARA;;IASAC;MACA,mCACA,2EADA;MAEA,sDAHA,CAIA;IACA,CAdA;;IAeAC;MACA;IACA,CAjBA;;IAmBA;IACAC;MACAC;QACAC;MADA,GAGA;QACAC;UACA;QADA;MADA,CAHA,EAQAC,IARA,CAQAC;QACAC;MACA,CAVA,EAWAC,KAXA,CAWAC;QACAF;MACA,CAbA;IAcA;;EAnCA,CA9BA;;EAoEAG;IACA;EACA;;AAtEA","names":["radioSelect","dropdownSelect","editable","components","EditorContent","data","editor","viewModal","mounted","extensions","Document","Paragraph","Text","RadioSelect","DropdownSelect","Editable","Placeholder","placeholder","HardBreak","HorizontalRule","methods","insertRadio","uuidv4","insertDropdown","insertHr","putData","axios","content","headers","then","response","console","catch","error","beforeUnmount"],"sourceRoot":"src/components","sources":["EmrEditor.vue"],"sourcesContent":["<template>\n  <div class=\"p-4 editor\">\n    <div class=\"editor__buttons--navbar mb-1 flex gap-1\">\n      <button outlined class=\"text-sm p-2 bg-gray-200 border border-gray-400 whitespace-nowrap\n      hover:bg-gray-300\" v-on:click=\"insertRadio\">\n        양성/음성 선택\n      </button>\n      <button outlined class=\"text-sm p-2 bg-gray-200 border border-gray-400 whitespace-nowrap\n      hover:bg-gray-300\" v-on:click=\"insertDropdown\">\n        목록 선택\n      </button>\n      <button outlined class=\"text-sm p-2 bg-gray-200 border border-gray-400 whitespace-nowrap\n      hover:bg-gray-300\">\n        일반텍스트\n      </button>\n      <button outlined class=\"text-sm p-2 bg-gray-200 border border-gray-400 whitespace-nowrap\n      hover:bg-gray-300\" v-on:click=\"insertHr\">\n        구분선 추가\n      </button>\n    </div>\n\n    <editor-content :editor=\"editor\" class=\"\" />\n\n    <div class=\"editor__buttons--footer mt-1 flex gap-1\">\n      <button outlined class=\"text-sm p-2 bg-gray-200 border border-gray-400 whitespace-nowrap\n      hover:bg-gray-300\" v-on:click=\"putData\">\n        제출\n      </button>\n    </div>\n\n    <div v-if=\"viewModal\">\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport Document from '@tiptap/extension-document'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport Text from '@tiptap/extension-text'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport { Editor, EditorContent } from '@tiptap/vue-2'\nimport HardBreak from '@tiptap/extension-hard-break'\nimport HorizontalRule from '@tiptap/extension-horizontal-rule'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\n\nimport {\n  radioSelect as RadioSelect,\n  dropdownSelect as DropdownSelect,\n  editable as Editable\n} from './Extension.js'\n\nexport default {\n  components: {\n    EditorContent,\n  },\n\n  data() {\n    return {\n      editor: null,\n      viewModal: false,\n    }\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      extensions: [\n        Document,\n        Paragraph,\n        Text,\n        RadioSelect,\n        DropdownSelect,\n        Editable,\n        Placeholder.configure({\n          placeholder: '양식을 작성해주세요',\n        }),\n        HardBreak,\n        HorizontalRule,\n      ]\n    })\n  },\n\n  methods: {\n    insertRadio() {\n      this.editor.commands.insertContent(\n        '<radio-select count = \"0\" na = ' +\n        uuidv4() + // random and for unique name(radio button group)\n        '></radio-select><editable><p>항목명을 명시하세요</p></editable>')\n      this.editor.chain().focus().setHorizontalRule().run()\n      // this.editor.commands.setHardBreak()\n    },\n    insertDropdown() {\n      this.editor.commands.insertContent(\n        '<dropdown-select></dropdown-select><editable><p>항목명을 명시하세요</p></editable>')\n      this.editor.chain().focus().setHorizontalRule().run()\n      // this.editor.commands.setHardBreak()\n    },\n    insertHr() {\n      this.editor.chain().focus().setHorizontalRule().run()\n    },\n\n    // put editor data with axios\n    putData() {\n      axios.post('http://127.0.0.1:8000/templates/', {\n        content: this.editor.getJSON()\n      },\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          console.log(response)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  },\n\n  beforeUnmount() {\n    this.editor.destroy()\n  },\n}\n</script>\n\n<style lang=\"scss\">\nbutton {\n  line-break: nowrap;\n}\n\n/* Basic editor styles */\n.ProseMirror {\n  padding: 1rem;\n  border: 1px solid #94a3b8;\n  height: 100%;\n\n  >hr {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n}\n\n/* Basic editor styles */\n\n/* Placeholder (at the top) */\n.ProseMirror p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\nhr.ProseMirror-selectednode {\n  border-top: 1px solid #68CEF8;\n}\n</style>"]},"metadata":{},"sourceType":"module"}