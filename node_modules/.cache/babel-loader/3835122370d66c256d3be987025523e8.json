{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { BubbleMenuPlugin } from '@tiptap/extension-bubble-menu';\nimport { Editor as Editor$1, NodeView } from '@tiptap/core';\nexport * from '@tiptap/core';\nimport { FloatingMenuPlugin } from '@tiptap/extension-floating-menu';\nimport Vue from 'vue';\nconst BubbleMenu = {\n  name: 'BubbleMenu',\n  props: {\n    pluginKey: {\n      type: [String, Object],\n      default: 'bubbleMenu'\n    },\n    editor: {\n      type: Object,\n      required: true\n    },\n    tippyOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    shouldShow: {\n      type: Function,\n      default: null\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (!editor) {\n          return;\n        }\n\n        this.$nextTick(() => {\n          editor.registerPlugin(BubbleMenuPlugin({\n            pluginKey: this.pluginKey,\n            editor,\n            element: this.$el,\n            tippyOptions: this.tippyOptions,\n            shouldShow: this.shouldShow\n          }));\n        });\n      }\n\n    }\n  },\n\n  render(createElement) {\n    return createElement('div', {\n      style: {\n        visibility: 'hidden'\n      }\n    }, this.$slots.default);\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin(this.pluginKey);\n  }\n\n};\n\nclass Editor extends Editor$1 {\n  constructor() {\n    super(...arguments);\n    this.contentComponent = null;\n  }\n\n}\n\nconst EditorContent = {\n  name: 'EditorContent',\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor && editor.options.element) {\n          this.$nextTick(() => {\n            const element = this.$el;\n\n            if (!element || !editor.options.element.firstChild) {\n              return;\n            }\n\n            element.append(...editor.options.element.childNodes);\n            editor.contentComponent = this;\n            editor.setOptions({\n              element\n            });\n            editor.createNodeViews();\n          });\n        }\n      }\n\n    }\n  },\n\n  render(createElement) {\n    return createElement('div');\n  },\n\n  beforeDestroy() {\n    const {\n      editor\n    } = this;\n\n    if (!editor) {\n      return;\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {}\n      });\n    }\n\n    editor.contentComponent = null;\n\n    if (!editor.options.element.firstChild) {\n      return;\n    }\n\n    const newElement = document.createElement('div');\n    newElement.append(...editor.options.element.childNodes);\n    editor.setOptions({\n      element: newElement\n    });\n  }\n\n};\nconst FloatingMenu = {\n  name: 'FloatingMenu',\n  props: {\n    pluginKey: {\n      type: [String, Object],\n      default: 'floatingMenu'\n    },\n    editor: {\n      type: Object,\n      required: true\n    },\n    tippyOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    shouldShow: {\n      type: Function,\n      default: null\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (!editor) {\n          return;\n        }\n\n        this.$nextTick(() => {\n          editor.registerPlugin(FloatingMenuPlugin({\n            pluginKey: this.pluginKey,\n            editor,\n            element: this.$el,\n            tippyOptions: this.tippyOptions,\n            shouldShow: this.shouldShow\n          }));\n        });\n      }\n\n    }\n  },\n\n  render(createElement) {\n    return createElement('div', {\n      style: {\n        visibility: 'hidden'\n      }\n    }, this.$slots.default);\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin(this.pluginKey);\n  }\n\n};\nconst NodeViewContent = {\n  props: {\n    as: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(createElement) {\n    return createElement(this.as, {\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      attrs: {\n        'data-node-view-content': ''\n      }\n    });\n  }\n\n};\nconst NodeViewWrapper = {\n  props: {\n    as: {\n      type: String,\n      default: 'div'\n    }\n  },\n  inject: ['onDragStart', 'decorationClasses'],\n\n  render(createElement) {\n    return createElement(this.as, {\n      class: this.decorationClasses.value,\n      style: {\n        whiteSpace: 'normal'\n      },\n      attrs: {\n        'data-node-view-wrapper': ''\n      },\n      on: {\n        dragstart: this.onDragStart\n      }\n    }, this.$slots.default);\n  }\n\n};\n\nclass VueRenderer {\n  constructor(component, props) {\n    const Component = typeof component === 'function' ? component : Vue.extend(component);\n    this.ref = new Component(props).$mount();\n  }\n\n  get element() {\n    return this.ref.$el;\n  }\n\n  updateProps(props = {}) {\n    var _a, _b, _c;\n\n    if (!this.ref.$props) {\n      return;\n    } // prevents `Avoid mutating a prop directly` error message\n    // Fix: `VueNodeViewRenderer` change vue Constructor `config.silent` not working\n\n\n    const currentVueConstructor = (_c = (_b = (_a = this.ref.$props.editor) === null || _a === void 0 ? void 0 : _a.contentComponent) === null || _b === void 0 ? void 0 : _b.$options._base) !== null && _c !== void 0 ? _c : Vue; // eslint-disable-line\n\n    const originalSilent = currentVueConstructor.config.silent;\n    currentVueConstructor.config.silent = true;\n    Object.entries(props).forEach(([key, value]) => {\n      this.ref.$props[key] = value;\n    });\n    currentVueConstructor.config.silent = originalSilent;\n  }\n\n  destroy() {\n    this.ref.$destroy();\n  }\n\n}\n\nconst nodeViewProps = {\n  editor: {\n    type: Object,\n    required: true\n  },\n  node: {\n    type: Object,\n    required: true\n  },\n  decorations: {\n    type: Object,\n    required: true\n  },\n  selected: {\n    type: Boolean,\n    required: true\n  },\n  extension: {\n    type: Object,\n    required: true\n  },\n  getPos: {\n    type: Function,\n    required: true\n  },\n  updateAttributes: {\n    type: Function,\n    required: true\n  },\n  deleteNode: {\n    type: Function,\n    required: true\n  }\n};\n\nclass VueNodeView extends NodeView {\n  mount() {\n    var _a, _b;\n\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode()\n    };\n    const onDragStart = this.onDragStart.bind(this);\n    this.decorationClasses = Vue.observable({\n      value: this.getDecorationClasses()\n    }); // @ts-ignore\n\n    const vue = (_b = (_a = this.editor.contentComponent) === null || _a === void 0 ? void 0 : _a.$options._base) !== null && _b !== void 0 ? _b : Vue; // eslint-disable-line\n\n    const Component = vue.extend(this.component).extend({\n      props: Object.keys(props),\n      provide: () => {\n        return {\n          onDragStart,\n          decorationClasses: this.decorationClasses\n        };\n      }\n    });\n    this.renderer = new VueRenderer(Component, {\n      parent: this.editor.contentComponent,\n      propsData: props\n    });\n  }\n\n  get dom() {\n    if (!this.renderer.element.hasAttribute('data-node-view-wrapper')) {\n      throw Error('Please use the NodeViewWrapper component for your node view.');\n    }\n\n    return this.renderer.element;\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null;\n    }\n\n    const contentElement = this.dom.querySelector('[data-node-view-content]');\n    return contentElement || this.dom;\n  }\n\n  update(node, decorations) {\n    const updateProps = props => {\n      this.decorationClasses.value = this.getDecorationClasses();\n      this.renderer.updateProps(props);\n    };\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node;\n      const oldDecorations = this.decorations;\n      this.node = node;\n      this.decorations = decorations;\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({\n          node,\n          decorations\n        })\n      });\n    }\n\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n\n    this.node = node;\n    this.decorations = decorations;\n    updateProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true\n    });\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false\n    });\n  }\n\n  getDecorationClasses() {\n    return this.decorations // @ts-ignore\n    .map(item => item.type.attrs.class).flat().join(' ');\n  }\n\n  destroy() {\n    this.renderer.destroy();\n  }\n\n}\n\nfunction VueNodeViewRenderer(component, options) {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!props.editor.contentComponent) {\n      return {};\n    }\n\n    return new VueNodeView(component, props, options);\n  };\n}\n\nexport { BubbleMenu, Editor, EditorContent, FloatingMenu, NodeViewContent, NodeViewWrapper, VueNodeViewRenderer, VueRenderer, nodeViewProps };","map":{"version":3,"mappings":"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","names":["name","props","pluginKey","type","String","Object","default","editor","required","tippyOptions","shouldShow","Function","watch","immediate","handler","$nextTick","registerPlugin","BubbleMenuPlugin","element","$el","render","createElement","style","visibility","$slots","beforeDestroy","unregisterPlugin","Editor","CoreEditor","constructor","contentComponent","options","firstChild","append","childNodes","setOptions","createNodeViews","isDestroyed","view","setProps","nodeViews","newElement","document","FloatingMenuPlugin","as","whiteSpace","attrs","inject","class","decorationClasses","value","on","dragstart","onDragStart","VueRenderer","Component","component","Vue","extend","ref","$mount","updateProps","$props","currentVueConstructor","_a","_b","$options","_base","_c","originalSilent","config","silent","entries","forEach","key","destroy","$destroy","node","decorations","selected","Boolean","extension","getPos","updateAttributes","deleteNode","VueNodeView","NodeView","mount","attributes","bind","observable","getDecorationClasses","vue","keys","provide","renderer","parent","propsData","dom","hasAttribute","Error","contentDOM","isLeaf","contentElement","querySelector","update","oldNode","oldDecorations","newNode","newDecorations","selectNode","deselectNode","map","item","flat","join"],"sources":["../src/BubbleMenu.ts","../src/Editor.ts","../src/EditorContent.ts","../src/FloatingMenu.ts","../src/NodeViewContent.ts","../src/NodeViewWrapper.ts","../src/VueRenderer.ts","../src/VueNodeViewRenderer.ts"],"sourcesContent":["import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport Vue, { Component, PropType } from 'vue'\n\nexport interface BubbleMenuInterface extends Vue {\n  pluginKey: BubbleMenuPluginProps['pluginKey'],\n  editor: BubbleMenuPluginProps['editor'],\n  tippyOptions: BubbleMenuPluginProps['tippyOptions'],\n  shouldShow: BubbleMenuPluginProps['shouldShow'],\n}\n\nexport const BubbleMenu: Component = {\n  name: 'BubbleMenu',\n\n  props: {\n    pluginKey: {\n      type: [String, Object as PropType<Exclude<BubbleMenuPluginProps['pluginKey'], string>>],\n      default: 'bubbleMenu',\n    },\n\n    editor: {\n      type: Object as PropType<BubbleMenuPluginProps['editor']>,\n      required: true,\n    },\n\n    tippyOptions: {\n      type: Object as PropType<BubbleMenuPluginProps['tippyOptions']>,\n      default: () => ({}),\n    },\n\n    shouldShow: {\n      type: Function as PropType<Exclude<BubbleMenuPluginProps['shouldShow'], null>>,\n      default: null,\n    },\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n      handler(this: BubbleMenuInterface, editor: BubbleMenuPluginProps['editor']) {\n        if (!editor) {\n          return\n        }\n\n        this.$nextTick(() => {\n          editor.registerPlugin(BubbleMenuPlugin({\n            pluginKey: this.pluginKey,\n            editor,\n            element: this.$el as HTMLElement,\n            tippyOptions: this.tippyOptions,\n            shouldShow: this.shouldShow,\n          }))\n        })\n      },\n    },\n  },\n\n  render(this: BubbleMenuInterface, createElement) {\n    return createElement('div', { style: { visibility: 'hidden' } }, this.$slots.default)\n  },\n\n  beforeDestroy(this: BubbleMenuInterface) {\n    this.editor.unregisterPlugin(this.pluginKey)\n  },\n}\n","import { Editor as CoreEditor } from '@tiptap/core'\nimport Vue from 'vue'\n\nexport class Editor extends CoreEditor {\n  public contentComponent: Vue | null = null\n}\n","import Vue, { Component, PropType } from 'vue'\n\nimport { Editor } from './Editor'\n\nexport interface EditorContentInterface extends Vue {\n  editor: Editor,\n}\n\nexport const EditorContent: Component = {\n  name: 'EditorContent',\n\n  props: {\n    editor: {\n      default: null,\n      type: Object as PropType<Editor>,\n    },\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n      handler(this: EditorContentInterface, editor: Editor) {\n        if (editor && editor.options.element) {\n          this.$nextTick(() => {\n            const element = this.$el\n\n            if (!element || !editor.options.element.firstChild) {\n              return\n            }\n\n            element.append(...editor.options.element.childNodes)\n            editor.contentComponent = this\n\n            editor.setOptions({\n              element,\n            })\n\n            editor.createNodeViews()\n          })\n        }\n      },\n    },\n  },\n\n  render(createElement) {\n    return createElement('div')\n  },\n\n  beforeDestroy(this: EditorContentInterface) {\n    const { editor } = this\n\n    if (!editor) {\n      return\n    }\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  },\n}\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport Vue, { Component, PropType } from 'vue'\n\nexport interface FloatingMenuInterface extends Vue {\n  pluginKey: FloatingMenuPluginProps['pluginKey'],\n  tippyOptions: FloatingMenuPluginProps['tippyOptions'],\n  editor: FloatingMenuPluginProps['editor'],\n  shouldShow: FloatingMenuPluginProps['shouldShow'],\n}\n\nexport const FloatingMenu: Component = {\n  name: 'FloatingMenu',\n\n  props: {\n    pluginKey: {\n      type: [String, Object as PropType<Exclude<FloatingMenuPluginProps['pluginKey'], string>>],\n      default: 'floatingMenu',\n    },\n\n    editor: {\n      type: Object as PropType<FloatingMenuPluginProps['editor']>,\n      required: true,\n    },\n\n    tippyOptions: {\n      type: Object as PropType<FloatingMenuPluginProps['tippyOptions']>,\n      default: () => ({}),\n    },\n\n    shouldShow: {\n      type: Function as PropType<Exclude<FloatingMenuPluginProps['shouldShow'], null>>,\n      default: null,\n    },\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n      handler(this: FloatingMenuInterface, editor: FloatingMenuPluginProps['editor']) {\n        if (!editor) {\n          return\n        }\n\n        this.$nextTick(() => {\n          editor.registerPlugin(FloatingMenuPlugin({\n            pluginKey: this.pluginKey,\n            editor,\n            element: this.$el as HTMLElement,\n            tippyOptions: this.tippyOptions,\n            shouldShow: this.shouldShow,\n          }))\n        })\n      },\n    },\n  },\n\n  render(this: FloatingMenuInterface, createElement) {\n    return createElement('div', { style: { visibility: 'hidden' } }, this.$slots.default)\n  },\n\n  beforeDestroy(this: FloatingMenuInterface) {\n    this.editor.unregisterPlugin(this.pluginKey)\n  },\n}\n","import Vue, { Component } from 'vue'\n\nexport interface NodeViewContentInterface extends Vue {\n  as: string,\n}\n\nexport const NodeViewContent: Component = {\n  props: {\n    as: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  render(this: NodeViewContentInterface, createElement) {\n    return createElement(this.as, {\n      style: {\n        whiteSpace: 'pre-wrap',\n      },\n      attrs: {\n        'data-node-view-content': '',\n      },\n    })\n  },\n}\n","import Vue, { Component } from 'vue'\n\nexport interface NodeViewWrapperInterface extends Vue {\n  as: string,\n  decorationClasses: {\n    value: string,\n  },\n  onDragStart: Function,\n}\n\nexport const NodeViewWrapper: Component = {\n  props: {\n    as: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  inject: ['onDragStart', 'decorationClasses'],\n\n  render(this: NodeViewWrapperInterface, createElement) {\n    return createElement(\n      this.as,\n      {\n        class: this.decorationClasses.value,\n        style: {\n          whiteSpace: 'normal',\n        },\n        attrs: {\n          'data-node-view-wrapper': '',\n        },\n        on: {\n          dragstart: this.onDragStart,\n        },\n      },\n      this.$slots.default,\n    )\n  },\n}\n","import Vue from 'vue'\nimport { VueConstructor } from 'vue/types/umd'\n\nexport class VueRenderer {\n  ref!: Vue\n\n  constructor(component: Vue | VueConstructor, props: any) {\n    const Component = (typeof component === 'function') ? component : Vue.extend(component)\n\n    this.ref = new Component(props).$mount()\n  }\n\n  get element(): Element {\n    return this.ref.$el\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    if (!this.ref.$props) {\n      return\n    }\n\n    // prevents `Avoid mutating a prop directly` error message\n    // Fix: `VueNodeViewRenderer` change vue Constructor `config.silent` not working\n    const currentVueConstructor = this.ref.$props.editor?.contentComponent?.$options._base ?? Vue // eslint-disable-line\n    const originalSilent = currentVueConstructor.config.silent\n\n    currentVueConstructor.config.silent = true\n\n    Object\n      .entries(props)\n      .forEach(([key, value]) => {\n        this.ref.$props[key] = value\n      })\n\n    currentVueConstructor.config.silent = originalSilent\n  }\n\n  destroy(): void {\n    this.ref.$destroy()\n  }\n}\n","import {\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from 'prosemirror-view'\nimport Vue from 'vue'\nimport { PropType, VueConstructor } from 'vue/types/umd'\n\nimport { Editor } from './Editor'\nimport { VueRenderer } from './VueRenderer'\n\nexport const nodeViewProps = {\n  editor: {\n    type: Object as PropType<NodeViewProps['editor']>,\n    required: true as const,\n  },\n  node: {\n    type: Object as PropType<NodeViewProps['node']>,\n    required: true as const,\n  },\n  decorations: {\n    type: Object as PropType<NodeViewProps['decorations']>,\n    required: true as const,\n  },\n  selected: {\n    type: Boolean as PropType<NodeViewProps['selected']>,\n    required: true as const,\n  },\n  extension: {\n    type: Object as PropType<NodeViewProps['extension']>,\n    required: true as const,\n  },\n  getPos: {\n    type: Function as PropType<NodeViewProps['getPos']>,\n    required: true as const,\n  },\n  updateAttributes: {\n    type: Function as PropType<NodeViewProps['updateAttributes']>,\n    required: true as const,\n  },\n  deleteNode: {\n    type: Function as PropType<NodeViewProps['deleteNode']>,\n    required: true as const,\n  },\n}\n\nexport interface VueNodeViewRendererOptions extends NodeViewRendererOptions {\n  update: ((props: {\n    oldNode: ProseMirrorNode,\n    oldDecorations: Decoration[],\n    newNode: ProseMirrorNode,\n    newDecorations: Decoration[],\n    updateProps: () => void,\n  }) => boolean) | null,\n}\n\nclass VueNodeView extends NodeView<(Vue | VueConstructor), Editor, VueNodeViewRendererOptions> {\n\n  renderer!: VueRenderer\n\n  decorationClasses!: {\n    value: string\n  }\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    const onDragStart = this.onDragStart.bind(this)\n\n    this.decorationClasses = Vue.observable({\n      value: this.getDecorationClasses(),\n    })\n\n    // @ts-ignore\n    const vue = this.editor.contentComponent?.$options._base ?? Vue // eslint-disable-line\n\n    const Component = vue\n      .extend(this.component)\n      .extend({\n        props: Object.keys(props),\n        provide: () => {\n          return {\n            onDragStart,\n            decorationClasses: this.decorationClasses,\n          }\n        },\n      })\n\n    this.renderer = new VueRenderer(Component, {\n      parent: this.editor.contentComponent,\n      propsData: props,\n    })\n  }\n\n  get dom() {\n    if (!this.renderer.element.hasAttribute('data-node-view-wrapper')) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    const contentElement = this.dom.querySelector('[data-node-view-content]')\n\n    return (contentElement || this.dom) as HTMLElement | null\n  }\n\n  update(node: ProseMirrorNode, decorations: Decoration[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.decorationClasses.value = this.getDecorationClasses()\n      this.renderer.updateProps(props)\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n  }\n\n  getDecorationClasses() {\n    return this.decorations\n      // @ts-ignore\n      .map(item => item.type.attrs.class)\n      .flat()\n      .join(' ')\n  }\n\n  destroy() {\n    this.renderer.destroy()\n  }\n\n}\n\nexport function VueNodeViewRenderer(component: Vue | VueConstructor, options?: Partial<VueNodeViewRendererOptions>): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new VueNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n"]},"metadata":{},"sourceType":"module"}