{"ast":null,"code":"import TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  components: {\n    TradingVue\n  },\n  methods: {\n    order() {\n      //console(this.trade, this.stock_code, this.order_amount, this.order_price);\n      if (this.order_amount * this.order_price > this.user_hold_amount) {\n        this.order_success = \"주문실패\";\n      } else {\n        this.order_success = \"주문성공\";\n        axios.post(\"/api/stock/order/\", {\n          trade: this.trade,\n          stock_code: this.stock_code,\n          order_amount: this.order_amount,\n          order_price: this.order_price\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n        axios.get(\"/api/user/money/\", {}).then(res => {\n          console.log(res.data);\n          this.user_hold_amount = res.data[\"money\"];\n        }).catch(err => {\n          console.log(err);\n        });\n        axios.post(\"/api/trade/confirm/\", {\n          stock_code: this.stock_code\n        }).then(res => {\n          console.log(res.data);\n          res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n          res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n          if (res.data[\"buy_confirmed\"] == 1) {\n            res.data[\"buy_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"buy_confirmed\"] = \"미체결\";\n          }\n\n          if (res.data[\"sell_confirmed\"] == 1) {\n            res.data[\"sell_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"sell_confirmed\"] = \"미체결\";\n          }\n\n          this.stocks_info = res.data;\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\"Relative Strength Index, 20\", \"Momentum, 10\", \"Bollinger Bands Width, 20\", \"Money Flow Index, 14\"];\n\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], lower_limit, (upper_limit - lower_limit) / average, upper_limit]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;else NMF += MF;\n          }\n\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;else AD += diff * -1;\n          }\n\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    }\n\n  },\n\n  created() {\n    axios.post(\"/api/stock/info/\", {\n      stock_code: this.stock_code,\n      group_name: \"default\"\n    }).then(res => {\n      console.log(res.data);\n      this.corp = res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"/api/stock/price/\", {\n      stock_code: this.stock_code,\n      group_name: \"default\"\n    }).then(res => {\n      console.log(res.data);\n\n      for (var i = 0; i < res.data.length; i++) {\n        this.chart[\"ohlcv\"] = [];\n        this.chart[\"ohlcv\"].push([res.data[\"price_date\"], res.data[\"open_price\"], res.data[\"max_price\"], res.data[\"min_price\"], res.data[\"close_price\"], res.data[\"volume\"]]);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(\"/api/user/money/\", {}).then(res => {\n      console.log(res.data);\n      this.user_hold_amount = res.data[\"money\"];\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"/api/trade/confirm/\", {\n      stock_code: this.stock_code\n    }).then(res => {\n      console.log(res.data);\n      res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n      res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n      res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n      res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n      if (res.data[\"buy_confirmed\"] == 1) {\n        res.data[\"buy_confirmed\"] = \"체결\";\n      } else {\n        res.data[\"buy_confirmed\"] = \"미체결\";\n      }\n\n      if (res.data[\"sell_confirmed\"] == 1) {\n        res.data[\"sell_confirmed\"] = \"체결\";\n      } else {\n        res.data[\"sell_confirmed\"] = \"미체결\";\n      }\n\n      this.stocks_info = res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(this.stock_code);\n\n    for (var i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\"; //console.log(str);\n\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.onResize);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n\n  data() {\n    return {\n      stock_code: window.location.href.split(\"/\")[5],\n      corp: {\n        stock_code: \"005930\",\n        cop_name: \"삼성전자\",\n        stock_amount: 596978255,\n        cop_info: \"한국 및 DX부문 해외 9개 지역총괄과 DS부문 해외 5개 지역총괄, SDC, Harman 등 233개의 종속기업으로 구성된 글로벌 전자기업임.\",\n        market: \"KOSPI 500\",\n        stockholder_name: \"삼성생명보험 외 15인\",\n        stock_holding_amount: 1241176035,\n        stock_holding_ratio: 20.79\n      },\n      user_hold_amount: 12345,\n      order_success: \"\",\n      stocks_info: {\n        sell_order_time: \"2022-12-05 13:00:00\",\n        sell_order_amount: 6,\n        sell_order_price: 7,\n        sell_confirmed: \"체결\",\n        buy_order_time: \"2022-12-05 17:00:00\",\n        buy_order_amount: 4,\n        buy_order_price: 5,\n        buy_confirmed: \"미체결\"\n      },\n      count: 999,\n      trade: \"\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [Overlays[\"MOM\"], Overlays[\"SMA\"], Overlays[\"EMA\"], Overlays[\"BBW\"], Overlays[\"MFI\"], Overlays[\"RSI\"], Overlays[\"BB\"]],\n      chart: {\n        ohlcv: [[\"2022-11-15T15:00:00.000Z\", 4239.4, 4239.6, 4079.6, 4079.63478779, 2993.45281556], [\"2022-11-16T15:00:00.000Z\", 4082.2, 4082.2, 4020.2, 4033.5, 3216.95571165], [\"2022-11-17T15:00:00.000Z\", 4035.6, 4072.78348726, 3965, 4055.6, 2157.50135341], [\"2022-11-18T15:00:00.000Z\", 4055.6, 4100, 4035, 4059.1719252, 1660.6115119], [\"2022-11-19T15:00:00.000Z\", 4059.1, 4076.6, 4014.1, 4060, 1070.09946267], [\"2022-11-20T15:00:00.000Z\", 4060.5, 4060.5, 3987.2, 4049.2, 1530.46774287], [\"2022-11-21T15:00:00.000Z\", 4049.2, 4092.7, 4035, 4089.6691106, 922.84509291], [\"2022-11-22T15:00:00.000Z\", 4089.9, 4098.6, 4060, 4073.2, 793.81081878], [\"2022-11-23T15:00:00.000Z\", 4073.7, 4084.3, 4045.3, 4049.7, 382.60686566], [\"2022-11-24T15:00:00.000Z\", 4049.9, 4074.5, 4041, 4042.1554296, 587.91082169], [\"2022-11-25T15:00:00.000Z\", 4042.1, 4058.2, 4025, 4031.3, 399.88361961], [\"2022-11-26T15:00:00.000Z\", 4031.3, 4054.8, 3953.5, 4005, 1462.60523159], [\"2022-11-27T15:00:00.000Z\", 4005, 4026.5, 3953.6, 4022.7, 818.53015592], [\"2022-11-28T15:00:00.000Z\", 4022.8, 4065, 4018.9, 4039.5, 971.06384284], [\"2022-11-29T15:00:00.000Z\", 4038.5, 4065, 4010.1, 4052, 726.79477438], [\"2022-11-30T15:00:00.000Z\", 4052.1, 4070.8, 4040.1, 4045, 495.99207452], [\"2022-12-01T15:00:00.000Z\", 4045, 4045.9, 4014.5, 4014.6, 487.14701364], [\"2022-12-02T15:00:00.000Z\", 4014.6, 4041.7, 4005.6, 4031.8, 505.30648465], [\"2022-12-03T15:00:00.000Z\", 4032, 4032, 3986.1, 4008.8, 792.52103654], [\"2022-12-04T15:00:00.000Z\", 4008.8, 4017.1, 3975.8, 4003.7, 489.94574863], [\"2022-12-05T15:00:00.000Z\", 4003.7, 4017.2, 3964.5, 3991.7, 1004.91928605], [\"2022-12-06T15:00:00.000Z\", 3992.6, 4010, 3980.1, 4009.3, 297.78849893], [\"2022-12-07T15:00:00.000Z\", 4009.3, 4061.9, 4007.4, 4025.2, 498.21371364], [\"2022-12-08T15:00:00.000Z\", 4025, 4056.9, 4023.6, 4047, 373.52977661], [\"2022-12-09T15:00:00.000Z\", 4046.9, 4208, 4038.6, 4191.9, 2589.49296961], [\"2022-12-10T15:00:00.000Z\", 4192, 4233.5, 4182.2, 4200, 1875.67597075], [\"2022-12-11T15:00:00.000Z\", 4200, 4268.3, 4199.9, 4216.6, 1197.42649634], [\"2022-12-12T15:00:00.000Z\", 4216.7, 4260.7, 4208.5, 4216.1, 1067.10928935], [\"2022-12-13T15:00:00.000Z\", 4214.9, 4257.6, 4205, 4247.3, 970.81717333], [\"2022-12-14T15:00:00.000Z\", 4247.3, 4264.4, 4230, 4263.9, 869.00302097], [\"2022-12-15T15:00:00.000Z\", 4263, 4340, 4263, 4313.4, 1458.724505]],\n        onchart: [{\n          name: \"Bollinger Bands, 20\",\n          type: \"BB\",\n          data: [],\n          settings: {\n            color: \"#2cc6c9ab\",\n            backColor: \"#2cc6c90a\"\n          }\n        }, {\n          name: \"Simple Moving Average, 20\",\n          type: \"SMA\",\n          data: [],\n          settings: {\n            color: \"#0000cc\"\n          }\n        }, {\n          name: \"Exponential Moving Average, 20\",\n          type: \"EMA\",\n          data: [],\n          settings: {\n            color: \"#ff0000\"\n          }\n        }],\n        offchart: [{\n          name: \"Money Flow Index, 14\",\n          type: \"MFI\",\n          data: [],\n          settings: {\n            color: \"#ff0000\",\n            backColor: \"#2cc6c90a\"\n          }\n        }]\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\"\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA0SA;AACA;AACA;AAEA;EACAA,WADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IACAC;MACA;MACA;QACA;MACA,CAFA,MAEA;QACA;QACAC,MACAC,IADA,CACA,mBADA,EACA;UACAC,iBADA;UAEAC,2BAFA;UAGAC,+BAHA;UAIAC;QAJA,CADA,EAOAC,IAPA,CAOAC;UACAC;QACA,CATA,EAUAC,KAVA,CAUAC;UACAF;QACA,CAZA;QAaAR,MACAW,GADA,CACA,kBADA,EACA,EADA,EAEAL,IAFA,CAEAC;UACAC;UACA;QACA,CALA,EAMAC,KANA,CAMAC;UACAF;QACA,CARA;QAUAR,MACAC,IADA,CACA,qBADA,EACA;UACAE;QADA,CADA,EAIAG,IAJA,CAIAC;UACAC;UACAD;UACAA;UACAA;UACAA;;UACA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;;UACA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;;UACA;QACA,CArBA,EAsBAE,KAtBA,CAsBAC;UACAF;QACA,CAxBA;MAyBA;IACA,CAxDA;;IAyDAI;MACA;MACA;MACA,eACA,6BADA,EAEA,cAFA,EAGA,2BAHA,EAIA,sBAJA;;MAMA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;IACA,CAtFA;;IAuFA;IACAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACAC;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA/GA;;IAgHAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACA;UACA;UACAH;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAzIA;;IA0IAE;MACA;MACA;MACA;;MACA;QACA;UACA;UACAJ;UACAK;UACAA;UACA;QACA;;QACAA;QACAH;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA7JA;;IA8JAI;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAC;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA/LA;;IAgMAM;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAD;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP,WACAS,WADA,EAEAC,WAFA,EAGA,qCAHA,EAIAC,WAJA;UAMAV;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAtOA;;IAuOAU;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;UACA;;UACA;YACA;YACA,4BACAC;UACA;;UACA;UACA;UACAb;UACAC;UACAa;UACAC;UACAd;UACAa;UACAC;UACA;QACA;;QACAd;QACAa;QACAC;QACAb;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA5QA;;IA6QAc;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;;UACA;YACA;YACA,8BACAC;UACA;;UACA;UACA;UACAjB;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA;;EAzSA,CAHA;;EA8SAgB;IACAhC,MACAC,IADA,CACA,kBADA,EACA;MACAE,2BADA;MAEA8B;IAFA,CADA,EAKA3B,IALA,CAKAC;MACAC;MACA;IACA,CARA,EASAC,KATA,CASAC;MACAF;IACA,CAXA;IAaAR,MACAC,IADA,CACA,mBADA,EACA;MACAE,2BADA;MAEA8B;IAFA,CADA,EAKA3B,IALA,CAKAC;MACAC;;MACA;QACA;QACA,0BACAD,sBADA,EAEAA,sBAFA,EAGAA,qBAHA,EAIAA,qBAJA,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","names":["name","components","TradingVue","methods","order","axios","post","trade","stock_code","order_amount","order_price","then","res","console","catch","err","get","button_click","SMA","data","close_data","count","EMA","MOM","before_data","BBW","devTotal","BB","ohlcv","lower_limit","upper_limit","MFI","NMF","high_data","low_data","RSI","AD","created","group_name","str","mounted","window","beforeDestroy","corp","cop_name","stock_amount","cop_info","market","stockholder_name","stock_holding_amount","stock_holding_ratio","user_hold_amount","order_success","stocks_info","sell_order_time","sell_order_amount","sell_order_price","sell_confirmed","buy_order_time","buy_order_amount","buy_order_price","buy_confirmed","overlays","Overlays","chart","onchart","type","settings","color","backColor","offchart","colors","colorBack","colorGrid","colorText"],"sourceRoot":"src/components","sources":["StockInfo.vue"],"sourcesContent":["<template>\n  <div class=\"gap-10 max-w-[100rem] sticky top-0\">\n    <div id=\"card\">\n      <a href=\"#\"\n          class=\"block p-6b g-white border border-gray-200 rounded-lg shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\">\n        <h5 class=\"mb-2 text-4xl font-bold tracking-tight text-gray-900 dark:text-white\">\n          {{ corp[\"cop_name\"] }} ({{ corp[\"market\"] }})\n        </h5>\n        <p class=\"font-normal text-2xl text-gray-700 dark:text-gray-400\">\n          {{ corp[\"cop_info\"] }}\n        </p>\n      </a>\n    </div>\n\n    <div class=\"flex flex-col-reverse gap-10\">\n      <!-- NOTE: list view -->\n\n      <div class=\"flex gap-10 justify-between\">\n        <div id=\"chart\">\n          <trading-vue\n              :titleTxt=\"this.corp['cop_name']\"\n              :data=\"this.chart\"\n              :width=\"1200\"\n              :height=\"500\"\n              :color-back=\"colors.colorBack\"\n              :color-grid=\"colors.colorGrid\"\n              :color-text=\"colors.colorText\"\n              :overlays=\"overlays\"\n          >\n          </trading-vue>\n\n          <div class=\"flex flex-col-reverse gap-10\">\n            <div class=\"flex gap-10 justify-between\">\n              <div id=\"information\">\n                <dl\n                    class=\"max-w-md text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\"\n                >\n                  <div class=\"flex flex-col pb-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"cop_name\"] }} 총 주식량\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stock_amount\"] }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col py-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"cop_name\"] }} 주식 보유자\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stockholder_name\"] }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col pt-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"stockholder_name\"].split(\" \")[0] }}의 보유 주식량\n                      및 비율\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stock_holding_amount\"] }}\n                      ({{ corp[\"stock_holding_ratio\"] }}%)\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n              <!-- sidebar -->\n              <div class=\"gap-5 min-w-[52rem] max-h-[42rem]\">\n                <div\n                    class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n                >\n                  <dl\n                      class=\"text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\"\n                  >\n                    <div class=\"flex flex-col\">\n                      <dt\n                          class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                      >\n                        최근 매수 거래\n                      </dt>\n                      <dd class=\"text-lg font-semibold\">\n                        주문 시간 : {{ stocks_info.buy_order_time }} 주문량 :\n                        {{ stocks_info.buy_order_amount }} 주문 금액 :\n                        {{ stocks_info.buy_order_price }}\n                        {{ stocks_info.buy_confirmed }}\n                      </dd>\n                    </div>\n                    <div class=\"flex flex-col\">\n                      <dt class=\"text-gray-500 md:text-lg dark:text-gray-400\">\n                        최근 매도 거래\n                      </dt>\n                      <dd class=\"text-lg font-semibold\">\n                        주문 시간 : {{ stocks_info.sell_order_time }} 주문량 :\n                        {{ stocks_info.sell_order_amount }} 주문 금액 :\n                        {{ stocks_info.sell_order_price }}\n                        {{ stocks_info.sell_confirmed }}\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- sidebar -->\n        <div class=\"gap-5 min-w-[20rem] max-h-[42rem]\">\n          <div\n              class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n          >\n            <form>\n              <div>\n                <label\n                    for=\"availability\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\"\n                >\n                  주문가능 금액\n                </label>\n                <p class=\"font-normal text-xl text-gray-700 dark:text-gray-400\">\n                  {{ user_hold_amount }}\n                </p>\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"trade\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\"\n                >\n                  매수/매도\n                </label>\n                <select\n                    id=\"trade\"\n                    v-model=\"trade\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                >\n                  <option value=\"sell\">매도</option>\n                  <option value=\"but\">매수</option>\n                </select>\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"order_amount\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                >수량(1 단위)</label\n                >\n                <input\n                    type=\"number\"\n                    v-model=\"order_amount\"\n                    id=\"order_amount\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"0\"\n                    required\n                />\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"order_price \"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                >주문가격</label\n                >\n                <input\n                    type=\"number\"\n                    v-model=\"order_price\"\n                    id=\"order_price\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"0\"\n                    required\n                />\n              </div>\n              <div class=\"flex flex-col\">\n                <button\n                    v-on:click=\"order\"\n                    class=\"text-white font-bold bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                >\n                  주문\n                </button>\n              </div>\n              <div class=\"flex flex-col\">\n                <div class=\"my-3\">\n                  <label\n                      for=\"order_price \"\n                      class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                  >{{ order_success }}</label\n                  >\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div\n              class=\"w-full max-w-md p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n          >\n            <div class=\"flex items-center justify-between mb-4\">\n              <h5\n                  class=\"text-xl font-bold leading-none text-gray-900 dark:text-white\"\n              >\n                거래 지표?\n              </h5>\n              <div class=\"flex flex-col\">\n                <button\n                    v-on:click=\"button_click\"\n                    class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                >\n                  offchart 변경\n                </button>\n              </div>\n            </div>\n            <div class=\"flow-root\">\n              <ul\n                  role=\"list\"\n                  class=\"divide-y divide-gray-200 dark:divide-gray-700\"\n              >\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        전일 거래량(24H)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][5]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        고가(당일)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][2]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        저가(당일)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][3]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        전일종가\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 2][4]\n                      }}\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"app\",\n  components: { TradingVue },\n  methods: {\n    order() {\n      //console(this.trade, this.stock_code, this.order_amount, this.order_price);\n      if (this.order_amount * this.order_price > this.user_hold_amount) {\n        this.order_success = \"주문실패\";\n      } else {\n        this.order_success = \"주문성공\";\n        axios\n            .post(\"/api/stock/order/\", {\n              trade: this.trade,\n              stock_code: this.stock_code,\n              order_amount: this.order_amount,\n              order_price: this.order_price,\n            })\n            .then((res) => {\n              console.log(res.data);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        axios\n            .get(\"/api/user/money/\", {})\n            .then((res) => {\n              console.log(res.data);\n              this.user_hold_amount = res.data[\"money\"];\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n\n        axios\n            .post(\"/api/trade/confirm/\", {\n              stock_code: this.stock_code,\n            })\n            .then((res) => {\n              console.log(res.data);\n              res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n              res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n              res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n              res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n              if (res.data[\"buy_confirmed\"] == 1) {\n                res.data[\"buy_confirmed\"] = \"체결\";\n              } else {\n                res.data[\"buy_confirmed\"] = \"미체결\";\n              }\n              if (res.data[\"sell_confirmed\"] == 1) {\n                res.data[\"sell_confirmed\"] = \"체결\";\n              } else {\n                res.data[\"sell_confirmed\"] = \"미체결\";\n              }\n              this.stocks_info = res.data;\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n      }\n    },\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\n        \"Relative Strength Index, 20\",\n        \"Momentum, 10\",\n        \"Bollinger Bands Width, 20\",\n        \"Money Flow Index, 14\",\n      ];\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([\n            ohlcv[i][0],\n            lower_limit,\n            (upper_limit - lower_limit) / average,\n            upper_limit,\n          ]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;\n            else NMF += MF;\n          }\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;\n            else AD += diff * -1;\n          }\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n  },\n  created() {\n    axios\n        .post(\"/api/stock/info/\", {\n          stock_code: this.stock_code,\n          group_name: \"default\",\n        })\n        .then((res) => {\n          console.log(res.data);\n          this.corp = res.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .post(\"/api/stock/price/\", {\n          stock_code: this.stock_code,\n          group_name: \"default\",\n        })\n        .then((res) => {\n          console.log(res.data);\n          for (var i = 0; i < res.data.length; i++) {\n            this.chart[\"ohlcv\"] = [];\n            this.chart[\"ohlcv\"].push([\n              res.data[\"price_date\"],\n              res.data[\"open_price\"],\n              res.data[\"max_price\"],\n              res.data[\"min_price\"],\n              res.data[\"close_price\"],\n              res.data[\"volume\"],\n            ]);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .get(\"/api/user/money/\", {})\n        .then((res) => {\n          console.log(res.data);\n          this.user_hold_amount = res.data[\"money\"];\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .post(\"/api/trade/confirm/\", {\n          stock_code: this.stock_code,\n        })\n        .then((res) => {\n          console.log(res.data);\n          res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n          res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n          if (res.data[\"buy_confirmed\"] == 1) {\n            res.data[\"buy_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"buy_confirmed\"] = \"미체결\";\n          }\n          if (res.data[\"sell_confirmed\"] == 1) {\n            res.data[\"sell_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"sell_confirmed\"] = \"미체결\";\n          }\n          this.stocks_info = res.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    console.log(this.stock_code);\n    for (var i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\";\n      //console.log(str);\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.onResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n  data() {\n    return {\n      stock_code: window.location.href.split(\"/\")[5],\n      corp: {\n        stock_code: \"005930\",\n        cop_name: \"삼성전자\",\n        stock_amount: 596978255,\n        cop_info:\n            \"한국 및 DX부문 해외 9개 지역총괄과 DS부문 해외 5개 지역총괄, SDC, Harman 등 233개의 종속기업으로 구성된 글로벌 전자기업임.\",\n        market: \"KOSPI 500\",\n        stockholder_name: \"삼성생명보험 외 15인\",\n        stock_holding_amount: 1241176035,\n        stock_holding_ratio: 20.79,\n      },\n      user_hold_amount: 12345,\n      order_success: \"\",\n      stocks_info: {\n        sell_order_time: \"2022-12-05 13:00:00\",\n        sell_order_amount: 6,\n        sell_order_price: 7,\n        sell_confirmed: \"체결\",\n\n        buy_order_time: \"2022-12-05 17:00:00\",\n        buy_order_amount: 4,\n        buy_order_price: 5,\n        buy_confirmed: \"미체결\",\n      },\n      count: 999,\n      trade: \"\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [\n        Overlays[\"MOM\"],\n        Overlays[\"SMA\"],\n        Overlays[\"EMA\"],\n        Overlays[\"BBW\"],\n        Overlays[\"MFI\"],\n        Overlays[\"RSI\"],\n        Overlays[\"BB\"],\n      ],\n      chart: {\n        ohlcv: [\n          [\n            \"2022-11-15T15:00:00.000Z\",\n            4239.4,\n            4239.6,\n            4079.6,\n            4079.63478779,\n            2993.45281556,\n          ],\n          [\n            \"2022-11-16T15:00:00.000Z\",\n            4082.2,\n            4082.2,\n            4020.2,\n            4033.5,\n            3216.95571165,\n          ],\n          [\n            \"2022-11-17T15:00:00.000Z\",\n            4035.6,\n            4072.78348726,\n            3965,\n            4055.6,\n            2157.50135341,\n          ],\n          [\n            \"2022-11-18T15:00:00.000Z\",\n            4055.6,\n            4100,\n            4035,\n            4059.1719252,\n            1660.6115119,\n          ],\n          [\n            \"2022-11-19T15:00:00.000Z\",\n            4059.1,\n            4076.6,\n            4014.1,\n            4060,\n            1070.09946267,\n          ],\n          [\n            \"2022-11-20T15:00:00.000Z\",\n            4060.5,\n            4060.5,\n            3987.2,\n            4049.2,\n            1530.46774287,\n          ],\n          [\n            \"2022-11-21T15:00:00.000Z\",\n            4049.2,\n            4092.7,\n            4035,\n            4089.6691106,\n            922.84509291,\n          ],\n          [\n            \"2022-11-22T15:00:00.000Z\",\n            4089.9,\n            4098.6,\n            4060,\n            4073.2,\n            793.81081878,\n          ],\n          [\n            \"2022-11-23T15:00:00.000Z\",\n            4073.7,\n            4084.3,\n            4045.3,\n            4049.7,\n            382.60686566,\n          ],\n          [\n            \"2022-11-24T15:00:00.000Z\",\n            4049.9,\n            4074.5,\n            4041,\n            4042.1554296,\n            587.91082169,\n          ],\n          [\n            \"2022-11-25T15:00:00.000Z\",\n            4042.1,\n            4058.2,\n            4025,\n            4031.3,\n            399.88361961,\n          ],\n          [\n            \"2022-11-26T15:00:00.000Z\",\n            4031.3,\n            4054.8,\n            3953.5,\n            4005,\n            1462.60523159,\n          ],\n          [\n            \"2022-11-27T15:00:00.000Z\",\n            4005,\n            4026.5,\n            3953.6,\n            4022.7,\n            818.53015592,\n          ],\n          [\n            \"2022-11-28T15:00:00.000Z\",\n            4022.8,\n            4065,\n            4018.9,\n            4039.5,\n            971.06384284,\n          ],\n          [\n            \"2022-11-29T15:00:00.000Z\",\n            4038.5,\n            4065,\n            4010.1,\n            4052,\n            726.79477438,\n          ],\n          [\n            \"2022-11-30T15:00:00.000Z\",\n            4052.1,\n            4070.8,\n            4040.1,\n            4045,\n            495.99207452,\n          ],\n          [\n            \"2022-12-01T15:00:00.000Z\",\n            4045,\n            4045.9,\n            4014.5,\n            4014.6,\n            487.14701364,\n          ],\n          [\n            \"2022-12-02T15:00:00.000Z\",\n            4014.6,\n            4041.7,\n            4005.6,\n            4031.8,\n            505.30648465,\n          ],\n          [\n            \"2022-12-03T15:00:00.000Z\",\n            4032,\n            4032,\n            3986.1,\n            4008.8,\n            792.52103654,\n          ],\n          [\n            \"2022-12-04T15:00:00.000Z\",\n            4008.8,\n            4017.1,\n            3975.8,\n            4003.7,\n            489.94574863,\n          ],\n          [\n            \"2022-12-05T15:00:00.000Z\",\n            4003.7,\n            4017.2,\n            3964.5,\n            3991.7,\n            1004.91928605,\n          ],\n          [\n            \"2022-12-06T15:00:00.000Z\",\n            3992.6,\n            4010,\n            3980.1,\n            4009.3,\n            297.78849893,\n          ],\n          [\n            \"2022-12-07T15:00:00.000Z\",\n            4009.3,\n            4061.9,\n            4007.4,\n            4025.2,\n            498.21371364,\n          ],\n          [\n            \"2022-12-08T15:00:00.000Z\",\n            4025,\n            4056.9,\n            4023.6,\n            4047,\n            373.52977661,\n          ],\n          [\n            \"2022-12-09T15:00:00.000Z\",\n            4046.9,\n            4208,\n            4038.6,\n            4191.9,\n            2589.49296961,\n          ],\n          [\n            \"2022-12-10T15:00:00.000Z\",\n            4192,\n            4233.5,\n            4182.2,\n            4200,\n            1875.67597075,\n          ],\n          [\n            \"2022-12-11T15:00:00.000Z\",\n            4200,\n            4268.3,\n            4199.9,\n            4216.6,\n            1197.42649634,\n          ],\n          [\n            \"2022-12-12T15:00:00.000Z\",\n            4216.7,\n            4260.7,\n            4208.5,\n            4216.1,\n            1067.10928935,\n          ],\n          [\n            \"2022-12-13T15:00:00.000Z\",\n            4214.9,\n            4257.6,\n            4205,\n            4247.3,\n            970.81717333,\n          ],\n          [\n            \"2022-12-14T15:00:00.000Z\",\n            4247.3,\n            4264.4,\n            4230,\n            4263.9,\n            869.00302097,\n          ],\n          [\"2022-12-15T15:00:00.000Z\", 4263, 4340, 4263, 4313.4, 1458.724505],\n        ],\n        onchart: [\n          {\n            name: \"Bollinger Bands, 20\",\n            type: \"BB\",\n            data: [],\n            settings: {\n              color: \"#2cc6c9ab\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n          {\n            name: \"Simple Moving Average, 20\",\n            type: \"SMA\",\n            data: [],\n            settings: {\n              color: \"#0000cc\",\n            },\n          },\n          {\n            name: \"Exponential Moving Average, 20\",\n            type: \"EMA\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n            },\n          },\n        ],\n        offchart: [\n          {\n            name: \"Money Flow Index, 14\",\n            type: \"MFI\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n        ],\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\",\n      },\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}