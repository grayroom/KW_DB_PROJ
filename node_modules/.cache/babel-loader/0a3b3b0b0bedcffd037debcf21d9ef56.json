{"ast":null,"code":"import TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  components: {\n    TradingVue\n  },\n  watch: {\n    order_amount: function () {\n      this.validateOrder();\n    },\n    order_price: function () {\n      this.validateOrder();\n    },\n    trade: function () {\n      this.validateOrder();\n    }\n  },\n  methods: {\n    onResize() {\n      if (window.innerWidth > 1536) {\n        this.width = 880;\n      } else {\n        this.width = window.innerWidth > 1280 ? 1240 : window.innerWidth - 40;\n      }\n    },\n\n    checkMoney() {\n      axios.get(\"/api/user/money/\").then(res => {\n        this.money = String(res.data).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    order() {\n      if (this.order_valid) {\n        axios.post(\"/api/stock/order/\", {\n          trade: this.trade,\n          stock_code: this.stock_code,\n          order_amount: this.order_amount,\n          order_price: this.order_price\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        alert(\"주문이 올바르지 않습니다.\");\n      }\n    },\n\n    loadCorpInfo() {\n      axios.post(\"/api/stock/info/\", {\n        stock_code: this.stock_code\n      }).then(res => {\n        this.corp = res.data;\n        this.corp.stock_amount = String(this.corp.stock_amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        this.corp.stock_holding_amount = String(this.corp.stock_holding_amount).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    loadConfirmedOrder() {\n      axios.post(\"/api/trade/confirm/\", {\n        stock_code: this.stock_code\n      }).then(res => {\n        res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n        res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n        res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n        res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n        if (res.data[\"buy_confirmed\"] === 1) {\n          res.data[\"buy_confirmed\"] = \"체결\";\n        } else {\n          res.data[\"buy_confirmed\"] = \"미체결\";\n        }\n\n        if (res.data[\"sell_confirmed\"] === 1) {\n          res.data[\"sell_confirmed\"] = \"체결\";\n        } else {\n          res.data[\"sell_confirmed\"] = \"미체결\";\n        }\n\n        this.stocks_info = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    loadPriceData() {\n      axios.post(\"/api/stock/price/\", {\n        stock_code: this.stock_code,\n        group_name: \"default\"\n      }).then(res => {\n        this.chart.ohlcv = [];\n        res.data.map(item => {\n          this.chart.ohlcv.push([Date.parse(item.price_date), item.open_price, item.max_price, item.min_price, item.close_price, item.volume]);\n        });\n        this.corp.diff = Math.floor((this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][4] / this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 2][4] - 1) * 10000) / 100;\n        this.button_click();\n        this.$refs.tradingVue.resetChart();\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\"Relative Strength Index, 20\", \"Momentum, 10\", \"Bollinger Bands Width, 20\", \"Money Flow Index, 14\"];\n\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n\n    loadUserStockInfo() {\n      axios.get('/api/user/stock/' + this.stock_code).then(res => {\n        console.log(res.data);\n        this.user_stock_info = res.data;\n      }).catch(err => {\n        console.log(err);\n        this.user_stock_info.hold_amount = 0;\n      });\n    },\n\n    validateOrder() {\n      if (this.trade === 'buy') {\n        if (this.order_amount * this.order_price > this.money) {\n          this.order_alert = \"예치금이 부족합니다!\";\n          this.order_valid = false;\n        } else {\n          this.order_alert = \"\";\n          this.order_valid = true;\n        }\n      } else if (this.trade === 'sell') {\n        if (this.order_amount > this.user_stock_info.stock_amount) {\n          this.order_alert = \"보유주식이 부족합니다!\";\n          this.order_valid = false;\n        } else {\n          this.order_alert = \"\";\n          this.order_valid = true;\n        }\n      } else {\n        this.order_alert = \"주문을 다시 확인해주세요!\";\n        this.order_valid = false;\n      }\n    },\n\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], lower_limit, (upper_limit - lower_limit) / average, upper_limit]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;else NMF += MF;\n          }\n\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;else AD += diff * -1;\n          }\n\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    }\n\n  },\n\n  created() {\n    console.log(this.chart.ohlcv);\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n    this.loadCorpInfo();\n    this.loadPriceData();\n    this.loadUserStockInfo();\n    this.checkMoney();\n    this.loadConfirmedOrder();\n    console.log(this.stock_code);\n\n    for (let i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\"; // console.log(str);\n\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n\n  data() {\n    return {\n      width: window.innerWidth,\n      stock_code: this.$router.currentRoute.params.stock_code,\n      user_stock_info: {},\n      corp: {},\n      money: 12345,\n      order_alert: \"\",\n      order_valid: false,\n      stocks_info: {},\n      count: 999,\n      trade: \"buy\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [Overlays[\"MOM\"], Overlays[\"SMA\"], Overlays[\"EMA\"], Overlays[\"BBW\"], Overlays[\"MFI\"], Overlays[\"RSI\"], Overlays[\"BB\"]],\n      chart: {\n        ohlcv: [],\n        onchart: [{\n          name: \"Bollinger Bands, 20\",\n          type: \"BB\",\n          data: [],\n          settings: {\n            color: \"#2cc6c9ab\",\n            backColor: \"#2cc6c90a\"\n          }\n        }, {\n          name: \"Simple Moving Average, 20\",\n          type: \"SMA\",\n          data: [],\n          settings: {\n            color: \"#0000cc\"\n          }\n        }, {\n          name: \"Exponential Moving Average, 20\",\n          type: \"EMA\",\n          data: [],\n          settings: {\n            color: \"#ff0000\"\n          }\n        }],\n        offchart: [{\n          name: \"Money Flow Index, 14\",\n          type: \"MFI\",\n          data: [],\n          settings: {\n            color: \"#ff0000\",\n            backColor: \"#2cc6c90a\"\n          }\n        }]\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\"\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAqPA;AACA;AACA;AAEA;EACAA,WADA;EAEAC;IAAAC;EAAA,CAFA;EAIAC;IACAC;MAAA;IAAA,CADA;IAEAC;MAAA;IAAA,CAFA;IAGAC;MAAA;IAAA;EAHA,CAJA;EAUAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA,CAPA;;IAQAC;MACAC,MACAC,GADA,CACA,kBADA,EAEAC,IAFA,CAEAC;QACA;MACA,CAJA,EAKAC,KALA,CAKAC;QACAC;MACA,CAPA;IAQA,CAjBA;;IAkBAC;MACA;QACAP;UACAJ,iBADA;UAEAY,2BAFA;UAGAd,+BAHA;UAIAC;QAJA,GAMAO,IANA,CAMAC;UACAG;QACA,CARA,EASAF,KATA,CASAC;UACAC;QACA,CAXA;MAYA,CAbA,MAaA;QACAG;MACA;IACA,CAnCA;;IAoCAC;MACAV,MACAW,IADA,CACA,kBADA,EACA;QACAH;MADA,CADA,EAIAN,IAJA,CAIAC;QACA;QACA,gEACA,uBADA,EAEA,GAFA;QAIA,wCACA,8BADA,EAEAS,OAFA,CAEA,uBAFA,EAEA,GAFA;MAGA,CAbA,EAcAR,KAdA,CAcAC;QACAC;MACA,CAhBA;IAiBA,CAtDA;;IAuDAO;MACAb,MACAW,IADA,CACA,qBADA,EACA;QACAH;MADA,CADA,EAIAN,IAJA,CAIAC;QACAA;QACAA;QACAA;QACAA;;QAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA;;QACA;UACAA;QACA,CAFA,MAEA;UACAA;QACA;;QACA;MACA,CArBA,EAsBAC,KAtBA,CAsBAC;QACAC;MACA,CAxBA;IAyBA,CAjFA;;IAkFAQ;MACAd,MACAW,IADA,CACA,mBADA,EACA;QACAH,2BADA;QAEAO;MAFA,CADA,EAKAb,IALA,CAKAC;QACA;QACAA;UACA,uBACAa,2BADA,EAEAC,eAFA,EAGAA,cAHA,EAIAA,cAJA,EAKAA,gBALA,EAMAA,WANA;QAQA,CATA;QAWA,sFACA,sDADA,GACA,CADA,IACA,KADA,IACA,GADA;QAGA;QACA;MACA,CAvBA,EAwBAb,KAxBA,CAwBAC;QACAC;MACA,CA1BA;IA2BA,CA9GA;;IA+GAY;MACA;MACA;MACA,eACA,6BADA,EAEA,cAFA,EAGA,2BAHA,EAIA,sBAJA;;MAMA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;IACA,CA5IA;;IA6IAC;MACAnB,gDACAE,IADA,CACAC;QACAG;QACA;MACA,CAJA,EAKAF,KALA,CAKAC;QACAC;QACA;MACA,CARA;IASA,CAvJA;;IAwJAc;MACA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;UACA;QACA;MACA,CARA,MAQA;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;UACA;QACA;MACA,CARA,MAQA;QACA;QACA;MACA;IACA,CA7KA;;IA+KA;IACAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACAC;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAvMA;;IAwMAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACA;UACA;UACAH;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAjOA;;IAkOAE;MACA;MACA;MACA;;MACA;QACA;UACA;UACAJ;UACAK;UACAA;UACA;QACA;;QACAA;QACAH;MACA;;MACA,uCACA;MACA;;MACA;IACA,CArPA;;IAsPAI;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAC;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAvRA;;IAwRAM;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAD;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP,WACAS,WADA,EAEAC,WAFA,EAGA,qCAHA,EAIAC,WAJA;UAMAV;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA9TA;;IA+TAU;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;UACA;;UACA;YACA;YACA,4BACAC;UACA;;UACA;UACA;UACAb;UACAC;UACAa;UACAC;UACAd;UACAa;UACAC;UACA;QACA;;QACAd;QACAa;QACAC;QACAb;MACA;;MACA,uCACA;MACA;;MACA;IACA,CApWA;;IAqWAc;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;;UACA;YACA;YACA,8BACAC;UACA;;UACA;UACA;UACAjB;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA;;EAjYA,CAVA;;EA6YAgB;IACAlC;IACAmC;IACA;IAEA;IACA;IACA;IACA;IACA;IAEAnC;;IACA;MACA;MACAoC,mBAFA,CAGA;;MACA;IACA;;IACA;IACA;IACA;IACA;EACA,CAnaA;;EAoaAC;IACAF;EACA,CAtaA;;EAuaAnB;IACA;MACAsB,wBADA;MAEApC,uDAFA;MAGAqC,mBAHA;MAIAC,QAJA;MAKAC,YALA;MAMAC,eANA;MAOAC,kBAPA;MAQAC,eARA;MASA1B,UATA;MAUA5B,YAVA;MAWAF,eAXA;MAYAC,cAZA;MAaAwD,WACAC,eADA,EAEAA,eAFA,EAGAA,eAHA,EAIAA,eAJA,EAKAA,eALA,EAMAA,eANA,EAOAA,cAPA,CAbA;MAsBAC;QACAtB,SADA;QAEAuB,UACA;UACAhE,2BADA;UAEAiE,UAFA;UAGAjC,QAHA;UAIAkC;YACAC,kBADA;YAEAC;UAFA;QAJA,CADA,EAUA;UACApE,iCADA;UAEAiE,WAFA;UAGAjC,QAHA;UAIAkC;YACAC;UADA;QAJA,CAVA,EAkBA;UACAnE,sCADA;UAEAiE,WAFA;UAGAjC,QAHA;UAIAkC;YACAC;UADA;QAJA,CAlBA,CAFA;QA6BAE,WACA;UACArE,4BADA;UAEAiE,WAFA;UAGAjC,QAHA;UAIAkC;YACAC,gBADA;YAEAC;UAFA;QAJA,CADA;MA7BA,CAtBA;MA+DAE;QACAC,iBADA;QAEAC,iBAFA;QAGAC;MAHA;IA/DA;EAqEA;;AA7eA","names":["name","components","TradingVue","watch","order_amount","order_price","trade","methods","onResize","checkMoney","axios","get","then","res","catch","err","console","order","stock_code","alert","loadCorpInfo","post","replace","loadConfirmedOrder","loadPriceData","group_name","Date","item","button_click","loadUserStockInfo","validateOrder","SMA","data","close_data","count","EMA","MOM","before_data","BBW","devTotal","BB","ohlcv","lower_limit","upper_limit","MFI","NMF","high_data","low_data","RSI","AD","created","window","str","beforeDestroy","width","user_stock_info","corp","money","order_alert","order_valid","stocks_info","overlays","Overlays","chart","onchart","type","settings","color","backColor","offchart","colors","colorBack","colorGrid","colorText"],"sourceRoot":"src/components","sources":["StockInfo.vue"],"sourcesContent":["<template>\n  <div ref=\"content\" class=\"flex flex-col max-w-7xl 2xl: sticky top-0\">\n    <div class=\"block pb-5 mb-5 g-white shadow-md dark:bg-gray-800 dark:border-gray-700 border-gray-600 border-b\">\n      <h5 class=\"mb-2 text-4xl font-bold tracking-tight text-gray-900 dark:text-white\">\n        {{ corp[\"cop_name\"] }} ({{ corp[\"market\"] }})\n      </h5>\n      <p class=\"font-normal text-lg dark:text-white\">\n        {{\n          String(chart[\"ohlcv\"][chart[\"ohlcv\"].length - 1][4]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n        }} KRW (<span\n          v-if=\"corp.diff > 0\"><i class=\"fa-solid fa-caret-up text-red-600\"></i> {{ corp.diff }}%</span><span\n          v-else-if=\"corp.diff < 0\"><i class=\"fa-solid fa-caret-down text-blue-600\"></i> {{\n          corp.diff\n        }}%</span><span v-else><i class=\"fa-solid fa-minus\"></i></span>)\n      </p>\n      <p class=\"font-normal text-lg text-gray-700 dark:text-gray-400\">\n        {{ corp[\"cop_info\"] }}\n      </p>\n    </div>\n\n    <div class=\"flex flex-col-reverse gap-10\">\n      <!-- NOTE: list view -->\n\n      <div class=\"flex flex-col 2xl:flex-row gap-10 justify-between\">\n        <div id=\"chart\" class=\"flex flex-col gap-10\">\n          <trading-vue ref=\"tradingVue\"\n                       :color-back=\"colors.colorBack\"\n                       :color-grid=\"colors.colorGrid\"\n                       :color-text=\"colors.colorText\"\n                       :data=\"this.chart\"\n                       :height=500\n                       :overlays=\"overlays\"\n                       :titleTxt=\"this.corp['cop_name']\"\n                       :width=\"this.width\"\n                       class=\"rounded-lg overflow-hidden pb-10 bg-white mx-auto\"\n          >\n          </trading-vue>\n\n          <div class=\"flex flex-col-reverse gap-10\">\n            <div class=\"flex gap-10 justify-between\">\n              <div class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\">\n                <dl class=\"max-w-md text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\">\n                  <div class=\"flex flex-col pb-1\">\n                    <dt class=\"mb-1 font-bold md:text-lg\">\n                      발행 주식 수\n                    </dt>\n                    <dd class=\"text-gray-500  dark:text-gray-400\">\n                      {{ corp[\"stock_amount\"] }} 주\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col py-1\">\n                    <dt class=\"mb-1 font-bold md:text-lg\">\n                      주요 주주\n                    </dt>\n                    <dd class=\"text-gray-500  dark:text-gray-400\">\n                      {{ corp[\"stockholder_name\"] }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col pt-1\">\n                    <dt class=\"mb-1 font-bold md:text-lg\">\n                      최대주주 ({{ String(corp.stockholder_name).split(\" \")[0] }}) 보유량\n                    </dt>\n                    <dd class=\"text-gray-500  dark:text-gray-400\">\n                      {{ corp[\"stock_holding_amount\"] }}주\n                      ({{ corp[\"stock_holding_ratio\"] }}%)\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n\n              <div class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\">\n                <dl class=\"text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\">\n                  <div class=\"flex flex-col pb-1\">\n                    <dt class=\"mb-1 font-bold md:text-lg\">\n                      최근 매수 거래\n                    </dt>\n                    <dd class=\"text-gray-500  dark:text-gray-400\">\n                      주문 시간 : {{ stocks_info.buy_order_time }} 주문량 :\n                      {{ stocks_info.buy_order_amount }} 주문 금액 :\n                      {{ stocks_info.buy_order_price }}\n                      {{ stocks_info.buy_confirmed }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col py-1\">\n                    <dt class=\"mb-1 font-bold md:text-lg\">\n                      최근 매도 거래\n                    </dt>\n                    <dd class=\"text-gray-500  dark:text-gray-400\">\n                      주문 시간 : {{ stocks_info.sell_order_time }} 주문량 :\n                      {{ stocks_info.sell_order_amount }} 주문 금액 :\n                      {{ stocks_info.sell_order_price }}\n                      {{ stocks_info.sell_confirmed }}\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- sidebar -->\n        <div class=\"flex flex-row 2xl:flex-col gap-5 min-w-[20rem]\">\n          <div\n              class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700 flex flex-col gap-5\">\n            <div>\n              <label class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\">\n                예치금\n              </label>\n              <p class=\"font-extrabold text-xl dark:text-white\">\n                {{ money }} KRW\n              </p>\n            </div>\n            <div>\n              <label class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\">\n                보유수량\n              </label>\n              <p class=\"font-extrabold text-xl dark:text-white\">\n                {{ user_stock_info.hold_amount }} 주\n              </p>\n            </div>\n            <div>\n              <label class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\"\n                     for=\"trade\">\n                매수/매도\n              </label>\n              <select\n                  id=\"trade\"\n                  v-model=\"trade\"\n                  class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                <option value=\"sell\">매도</option>\n                <option selected value=\"buy\">매수</option>\n              </select>\n            </div>\n            <div>\n              <label class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                     for=\"order_amount\">\n                수량(1 단위)\n              </label>\n              <input\n                  id=\"order_amount\" v-model=\"order_amount\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"0\"\n                  required\n                  type=\"number\"/>\n            </div>\n            <div>\n              <label class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\" for=\"order_price\">\n                주문가격\n              </label>\n              <input\n                  id=\"order_price\" v-model=\"order_price\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"0\"\n                  required\n                  type=\"number\"/>\n            </div>\n            <button class=\"text-white font-bold bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                    v-on:click=\"order\">\n              주문\n            </button>\n            <p v-html=\"order_alert\">\n            </p>\n          </div>\n\n          <div\n              class=\"w-full max-w-md p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h5 class=\"text-xl font-bold leading-none text-gray-900 dark:text-white\">\n                거래 지표\n              </h5>\n              <div class=\"flex flex-col\">\n                <button class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                        v-on:click=\"button_click\">\n                  offchart 변경\n                </button>\n              </div>\n            </div>\n            <div class=\"flow-root\">\n              <ul class=\"divide-y divide-gray-200 dark:divide-gray-700\" role=\"list\">\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p class=\"text-sm font-medium text-gray-900 truncate dark:text-white\">\n                        전일 거래량(24H)\n                      </p>\n                    </div>\n                    <div class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\">\n                      {{\n                        String(this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length -\n                        1][5]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      }} 주\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p class=\"text-sm font-medium text-gray-900 truncate dark:text-white\">\n                        고가(당일)\n                      </p>\n                    </div>\n                    <div class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\">\n                      {{\n                        String(this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length -\n                        1][2]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      }} KRW\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p class=\"text-sm font-medium text-gray-900 truncate dark:text-white\">\n                        저가(당일)\n                      </p>\n                    </div>\n                    <div class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\">\n                      {{\n                        String(this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length -\n                        1][3]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      }} KRW\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p class=\"text-sm font-medium text-gray-900 truncate dark:text-white\">\n                        전일종가\n                      </p>\n                    </div>\n                    <div class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\">\n                      {{\n                        String(this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length -\n                        2][4]).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      }} KRW\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"app\",\n  components: {TradingVue},\n\n  watch: {\n    order_amount: function() {this.validateOrder()},\n    order_price: function() {this.validateOrder()},\n    trade: function() {this.validateOrder()},\n  },\n\n  methods: {\n    onResize() {\n      if (window.innerWidth > 1536) {\n        this.width = 880\n      } else {\n        this.width = window.innerWidth > 1280 ? 1240 : window.innerWidth - 40;\n      }\n    },\n    checkMoney() {\n      axios\n          .get(\"/api/user/money/\")\n          .then((res) => {\n            this.money = String(res.data).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n    },\n    order() {\n      if (this.order_valid) {\n        axios.post(\"/api/stock/order/\", {\n          trade: this.trade,\n          stock_code: this.stock_code,\n          order_amount: this.order_amount,\n          order_price: this.order_price,\n        })\n            .then((res) => {\n              console.log(res.data);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n      } else {\n        alert(\"주문이 올바르지 않습니다.\");\n      }\n    },\n    loadCorpInfo() {\n      axios\n          .post(\"/api/stock/info/\", {\n            stock_code: this.stock_code,\n          })\n          .then((res) => {\n            this.corp = res.data;\n            this.corp.stock_amount = String(this.corp.stock_amount).replace(\n                /\\B(?=(\\d{3})+(?!\\d))/g,\n                \",\"\n            );\n            this.corp.stock_holding_amount = String(\n                this.corp.stock_holding_amount\n            ).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n    },\n    loadConfirmedOrder() {\n      axios\n          .post(\"/api/trade/confirm/\", {\n            stock_code: this.stock_code,\n          })\n          .then((res) => {\n            res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n            res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n            res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n            res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n            if (res.data[\"buy_confirmed\"] === 1) {\n              res.data[\"buy_confirmed\"] = \"체결\";\n            } else {\n              res.data[\"buy_confirmed\"] = \"미체결\";\n            }\n            if (res.data[\"sell_confirmed\"] === 1) {\n              res.data[\"sell_confirmed\"] = \"체결\";\n            } else {\n              res.data[\"sell_confirmed\"] = \"미체결\";\n            }\n            this.stocks_info = res.data;\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n    },\n    loadPriceData() {\n      axios\n          .post(\"/api/stock/price/\", {\n            stock_code: this.stock_code,\n            group_name: \"default\",\n          })\n          .then((res) => {\n            this.chart.ohlcv = []\n            res.data.map((item) => {\n              this.chart.ohlcv.push([\n                Date.parse(item.price_date),\n                item.open_price,\n                item.max_price,\n                item.min_price,\n                item.close_price,\n                item.volume\n              ]);\n            });\n\n            this.corp.diff = Math.floor((this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][4] /\n                this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 2][4] - 1) * 10000) / 100\n\n            this.button_click()\n            this.$refs.tradingVue.resetChart()\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n    },\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\n        \"Relative Strength Index, 20\",\n        \"Momentum, 10\",\n        \"Bollinger Bands Width, 20\",\n        \"Money Flow Index, 14\",\n      ];\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n    loadUserStockInfo() {\n      axios.get('/api/user/stock/' + this.stock_code)\n          .then((res) => {\n            console.log(res.data)\n            this.user_stock_info = res.data\n          })\n          .catch((err) => {\n            console.log(err)\n            this.user_stock_info.hold_amount = 0\n          })\n    },\n    validateOrder() {\n      if (this.trade === 'buy') {\n        if (this.order_amount * this.order_price > this.money) {\n          this.order_alert = \"예치금이 부족합니다!\";\n          this.order_valid = false;\n        } else {\n          this.order_alert = \"\";\n          this.order_valid = true;\n        }\n      } else if (this.trade === 'sell') {\n        if (this.order_amount > this.user_stock_info.stock_amount) {\n          this.order_alert = \"보유주식이 부족합니다!\";\n          this.order_valid = false;\n        } else {\n          this.order_alert = \"\";\n          this.order_valid = true;\n        }\n      } else {\n        this.order_alert = \"주문을 다시 확인해주세요!\";\n        this.order_valid = false;\n      }\n    },\n\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([\n            ohlcv[i][0],\n            lower_limit,\n            (upper_limit - lower_limit) / average,\n            upper_limit,\n          ]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;\n            else NMF += MF;\n          }\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;\n            else AD += diff * -1;\n          }\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n  },\n  created() {\n    console.log(this.chart.ohlcv);\n    window.addEventListener('resize', this.onResize)\n    this.onResize()\n\n    this.loadCorpInfo()\n    this.loadPriceData()\n    this.loadUserStockInfo()\n    this.checkMoney()\n    this.loadConfirmedOrder()\n\n    console.log(this.stock_code);\n    for (let i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\";\n      // console.log(str);\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n  data() {\n    return {\n      width: window.innerWidth,\n      stock_code: this.$router.currentRoute.params.stock_code,\n      user_stock_info: {},\n      corp: {},\n      money: 12345,\n      order_alert: \"\",\n      order_valid: false,\n      stocks_info: {},\n      count: 999,\n      trade: \"buy\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [\n        Overlays[\"MOM\"],\n        Overlays[\"SMA\"],\n        Overlays[\"EMA\"],\n        Overlays[\"BBW\"],\n        Overlays[\"MFI\"],\n        Overlays[\"RSI\"],\n        Overlays[\"BB\"],\n      ],\n      chart: {\n        ohlcv: [],\n        onchart: [\n          {\n            name: \"Bollinger Bands, 20\",\n            type: \"BB\",\n            data: [],\n            settings: {\n              color: \"#2cc6c9ab\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n          {\n            name: \"Simple Moving Average, 20\",\n            type: \"SMA\",\n            data: [],\n            settings: {\n              color: \"#0000cc\",\n            },\n          },\n          {\n            name: \"Exponential Moving Average, 20\",\n            type: \"EMA\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n            },\n          },\n        ],\n        offchart: [\n          {\n            name: \"Money Flow Index, 14\",\n            type: \"MFI\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n        ],\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\",\n      },\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}