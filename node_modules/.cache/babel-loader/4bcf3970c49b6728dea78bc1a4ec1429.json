{"ast":null,"code":"import TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\nexport default {\n  name: \"app\",\n  components: {\n    TradingVue\n  },\n  methods: {\n    order() {\n      //console(this.trade, this.stock_code, this.order_amount, this.order_price);\n      if (this.order_amount * this.order_price > this.money) {\n        this.order_success = \"주문실패\";\n      } else {\n        this.order_success = \"주문성공\";\n        axios.post(\"/api/stock/order/\", {\n          trade: this.trade,\n          stock_code: this.stock_code,\n          order_amount: this.order_amount,\n          order_price: this.order_price\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n        axios.get(\"/api/user/money/\", {}).then(res => {\n          console.log(res.data);\n          this.money = res.data[\"money\"];\n        }).catch(err => {\n          console.log(err);\n        });\n        axios.post(\"/api/trade/confirm/\", {\n          stock_code: this.stock_code\n        }).then(res => {\n          res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n          res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n          if (res.data[\"buy_confirmed\"] == 1) {\n            res.data[\"buy_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"buy_confirmed\"] = \"미체결\";\n          }\n\n          if (res.data[\"sell_confirmed\"] == 1) {\n            res.data[\"sell_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"sell_confirmed\"] = \"미체결\";\n          }\n\n          this.stocks_info = res.data;\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\"Relative Strength Index, 20\", \"Momentum, 10\", \"Bollinger Bands Width, 20\", \"Money Flow Index, 14\"];\n\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          var devTotal = 0; // 편차\n\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], lower_limit, (upper_limit - lower_limit) / average, upper_limit]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;else NMF += MF;\n          }\n\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    },\n\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;else AD += diff * -1;\n          }\n\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n\n      for (var k = 0; k < data.length; k++) {//console.log(data[k]);\n      }\n\n      return data;\n    }\n\n  },\n\n  created() {\n    axios.post(\"/api/stock/info/\", {\n      stock_code: this.stock_code\n    }).then(res => {\n      console.log(res.data);\n      this.corp = res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"/api/stock/price/\", {\n      stock_code: this.stock_code,\n      group_name: \"default\"\n    }).then(res => {\n      console.log(res.data);\n\n      for (var i = 0; i < res.data.length; i++) {\n        this.chart[\"ohlcv\"] = [];\n        this.chart[\"ohlcv\"].push([res.data[\"price_date\"], res.data[\"open_price\"], res.data[\"max_price\"], res.data[\"min_price\"], res.data[\"close_price\"], res.data[\"volume\"]]);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(\"/api/user/money/\", {}).then(res => {\n      console.log(res.data);\n      this.money = res.data[\"money\"];\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.post(\"/api/trade/confirm/\", {\n      stock_code: this.stock_code\n    }).then(res => {\n      console.log(res.data);\n      res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n      res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n      res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n      res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n      if (res.data[\"buy_confirmed\"] == 1) {\n        res.data[\"buy_confirmed\"] = \"체결\";\n      } else {\n        res.data[\"buy_confirmed\"] = \"미체결\";\n      }\n\n      if (res.data[\"sell_confirmed\"] == 1) {\n        res.data[\"sell_confirmed\"] = \"체결\";\n      } else {\n        res.data[\"sell_confirmed\"] = \"미체결\";\n      }\n\n      this.stocks_info = res.data;\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(this.stock_code);\n\n    for (var i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\"; //console.log(str);\n\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.onResize);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n\n  data() {\n    return {\n      stock_code: window.location.href.split(\"/\")[5],\n      corp: {},\n      money: 0,\n      order_success: \"\",\n      stocks_info: {},\n      count: 0,\n      trade: \"\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [Overlays[\"MOM\"], Overlays[\"SMA\"], Overlays[\"EMA\"], Overlays[\"BBW\"], Overlays[\"MFI\"], Overlays[\"RSI\"], Overlays[\"BB\"]],\n      chart: {\n        ohlcv: [],\n        onchart: [{\n          name: \"Bollinger Bands, 20\",\n          type: \"BB\",\n          data: [],\n          settings: {\n            color: \"#2cc6c9ab\",\n            backColor: \"#2cc6c90a\"\n          }\n        }, {\n          name: \"Simple Moving Average, 20\",\n          type: \"SMA\",\n          data: [],\n          settings: {\n            color: \"#0000cc\"\n          }\n        }, {\n          name: \"Exponential Moving Average, 20\",\n          type: \"EMA\",\n          data: [],\n          settings: {\n            color: \"#ff0000\"\n          }\n        }],\n        offchart: [{\n          name: \"Money Flow Index, 14\",\n          type: \"MFI\",\n          data: [],\n          settings: {\n            color: \"#ff0000\",\n            backColor: \"#2cc6c90a\"\n          }\n        }]\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\"\n      }\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA0SA;AACA;AACA;AAEA;EACAA,WADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IACAC;MACA;MACA;QACA;MACA,CAFA,MAEA;QACA;QACAC,MACAC,IADA,CACA,mBADA,EACA;UACAC,iBADA;UAEAC,2BAFA;UAGAC,+BAHA;UAIAC;QAJA,CADA,EAOAC,IAPA,CAOAC;UACAC;QACA,CATA,EAUAC,KAVA,CAUAC;UACAF;QACA,CAZA;QAaAR,MACAW,GADA,CACA,kBADA,EACA,EADA,EAEAL,IAFA,CAEAC;UACAC;UACA;QACA,CALA,EAMAC,KANA,CAMAC;UACAF;QACA,CARA;QAUAR,MACAC,IADA,CACA,qBADA,EACA;UACAE;QADA,CADA,EAIAG,IAJA,CAIAC;UACAA;UACAA;UACAA;UACAA;;UAEA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;;UACA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;;UACA;QACA,CArBA,EAsBAE,KAtBA,CAsBAC;UACAF;QACA,CAxBA;MAyBA;IACA,CAxDA;;IAyDAI;MACA;MACA;MACA,eACA,6BADA,EAEA,cAFA,EAGA,2BAHA,EAIA,sBAJA;;MAMA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;QACA;QACA;QACA;MACA;IACA,CAtFA;;IAuFA;IACAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACAC;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA/GA;;IAgHAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UACA;UACA;UACAH;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAzIA;;IA0IAE;MACA;MACA;MACA;;MACA;QACA;UACA;UACAJ;UACAK;UACAA;UACA;QACA;;QACAA;QACAH;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA7JA;;IA8JAI;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAC;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA/LA;;IAgMAM;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAGA;UAEA,iBANA,CAMA;;UACA;YACA;YACAD;UACA;;UAEA,4DAZA,CAYA;;UACA;UACA;UACAP,WACAS,WADA,EAEAC,WAFA,EAGA,qCAHA,EAIAC,WAJA;UAMAV;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA,CAtOA;;IAuOAU;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;UACA;;UACA;YACA;YACA,4BACAC;UACA;;UACA;UACA;UACAb;UACAC;UACAa;UACAC;UACAd;UACAa;UACAC;UACA;QACA;;QACAd;QACAa;QACAC;QACAb;MACA;;MACA,uCACA;MACA;;MACA;IACA,CA5QA;;IA6QAc;MACA;MACA;MACA;MACA;;MACA;QACA;UACA;UACA;;UACA;YACA;YACA,8BACAC;UACA;;UACA;UACA;UACAjB;UACAC;UACAA;UACA;QACA;;QACAA;QACAC;MACA;;MACA,uCACA;MACA;;MACA;IACA;;EAzSA,CAHA;;EA8SAgB;IACAhC,MACAC,IADA,CACA,kBADA,EACA;MACAE;IADA,CADA,EAIAG,IAJA,CAIAC;MACAC;MACA;IACA,CAPA,EAQAC,KARA,CAQAC;MACAF;IACA,CAVA;IAYAR,MACAC,IADA,CACA,mBADA,EACA;MACAE,2BADA;MAEA8B;IAFA,CADA,EAKA3B,IALA,CAKAC;MACAC;;MACA;QACA;QACA,0BACAD,sBADA,EAEAA,sBAFA,EAGAA,qBAHA,EAIAA,qBAJA,EAKAA,uBALA,EAMAA,kBANA;MAQA;IACA,CAlBA,EAmBAE,KAnBA,CAmBAC;MACAF;IACA,CArBA;IAuBAR,MACAW,GADA,CACA,kBADA,EACA,EADA,EAEAL,IAFA,CAEAC;MACAC;MACA;IACA,CALA,EAMAC,KANA,CAMAC;MACAF;IACA,CARA;IAUAR,MACAC,IADA,CACA,qBADA,EACA;MACAE;IADA,CADA,EAIAG,IAJA,CAIAC;MACAC;MACAD;MACAA;MACAA;MACAA;;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;;MACA;IACA,CArBA,EAsBAE,KAtBA,CAsBAC;MACAF;IACA,CAxBA;IA0BAA;;IACA;MACA;MACA0B,mBAFA,CAGA;;MACA;IACA;;IACA;IACA;IACA;IACA;EACA,CAjYA;;EAkYAC;IACAC;EACA,CApYA;;EAqYAC;IACAD;EACA,CAvYA;;EAwYAtB;IACA;MACAX,8CADA;MAEAmC,QAFA;MAGAC,QAHA;MAIAC,iBAJA;MAKAC,eALA;MAMAzB,QANA;MAOAd,SAPA;MAQAE,eARA;MASAC,cATA;MAUAqC,WACAC,eADA,EAEAA,eAFA,EAGAA,eAHA,EAIAA,eAJA,EAKAA,eALA,EAMAA,eANA,EAOAA,cAPA,CAVA;MAmBAC;QACArB,SADA;QAEAsB,UACA;UACAlD,2BADA;UAEAmD,UAFA;UAGAhC,QAHA;UAIAiC;YACAC,kBADA;YAEAC;UAFA;QAJA,CADA,EAUA;UACAtD,iCADA;UAEAmD,WAFA;UAGAhC,QAHA;UAIAiC;YACAC;UADA;QAJA,CAVA,EAkBA;UACArD,sCADA;UAEAmD,WAFA;UAGAhC,QAHA;UAIAiC;YACAC;UADA;QAJA,CAlBA,CAFA;QA6BAE,WACA;UACAvD,4BADA;UAEAmD,WAFA;UAGAhC,QAHA;UAIAiC;YACAC,gBADA;YAEAC;UAFA;QAJA,CADA;MA7BA,CAnBA;MA4DAE;QACAC,iBADA;QAEAC,iBAFA;QAGAC;MAHA;IA5DA;EAkEA;;AA3cA","names":["name","components","TradingVue","methods","order","axios","post","trade","stock_code","order_amount","order_price","then","res","console","catch","err","get","button_click","SMA","data","close_data","count","EMA","MOM","before_data","BBW","devTotal","BB","ohlcv","lower_limit","upper_limit","MFI","NMF","high_data","low_data","RSI","AD","created","group_name","str","mounted","window","beforeDestroy","corp","money","order_success","stocks_info","overlays","Overlays","chart","onchart","type","settings","color","backColor","offchart","colors","colorBack","colorGrid","colorText"],"sourceRoot":"src/components","sources":["StockInfo.vue"],"sourcesContent":["<template>\n  <div class=\"gap-10 max-w-[100rem] sticky top-0\">\n    <div id=\"card\">\n      <a href=\"#\"\n          class=\"block p-6b g-white border border-gray-200 rounded-lg shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\">\n        <h5 class=\"mb-2 text-4xl font-bold tracking-tight text-gray-900 dark:text-white\">\n          {{ corp[\"cop_name\"] }} ({{ corp[\"market\"] }})\n        </h5>\n        <p class=\"font-normal text-2xl text-gray-700 dark:text-gray-400\">\n          {{ corp[\"cop_info\"] }}\n        </p>\n      </a>\n    </div>\n\n    <div class=\"flex flex-col-reverse gap-10\">\n      <!-- NOTE: list view -->\n\n      <div class=\"flex gap-10 justify-between\">\n        <div id=\"chart\">\n          <trading-vue\n              :titleTxt=\"this.corp['cop_name']\"\n              :data=\"this.chart\"\n              :width=\"1200\"\n              :height=\"500\"\n              :color-back=\"colors.colorBack\"\n              :color-grid=\"colors.colorGrid\"\n              :color-text=\"colors.colorText\"\n              :overlays=\"overlays\"\n          >\n          </trading-vue>\n\n          <div class=\"flex flex-col-reverse gap-10\">\n            <div class=\"flex gap-10 justify-between\">\n              <div id=\"information\">\n                <dl\n                    class=\"max-w-md text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\"\n                >\n                  <div class=\"flex flex-col pb-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"cop_name\"] }} 총 주식량\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stock_amount\"] }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col py-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"cop_name\"] }} 주식 보유자\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stockholder_name\"] }}\n                    </dd>\n                  </div>\n                  <div class=\"flex flex-col pt-1\">\n                    <dt\n                        class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                    >\n                      {{ corp[\"stockholder_name\"].split(\" \")[0] }}의 보유 주식량\n                      및 비율\n                    </dt>\n                    <dd class=\"text-lg font-semibold\">\n                      {{ corp[\"stock_holding_amount\"] }}\n                      ({{ corp[\"stock_holding_ratio\"] }}%)\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n              <!-- sidebar -->\n              <div class=\"gap-5 min-w-[52rem] max-h-[42rem]\">\n                <div\n                    class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n                >\n                  <dl\n                      class=\"text-gray-900 divide-y divide-gray-200 dark:text-white dark:divide-gray-700\"\n                  >\n                    <div class=\"flex flex-col\">\n                      <dt\n                          class=\"mb-1 text-gray-500 md:text-lg dark:text-gray-400\"\n                      >\n                        최근 매수 거래\n                      </dt>\n                      <dd class=\"text-lg font-semibold\">\n                        주문 시간 : {{ stocks_info.buy_order_time }} 주문량 :\n                        {{ stocks_info.buy_order_amount }} 주문 금액 :\n                        {{ stocks_info.buy_order_price }}\n                        {{ stocks_info.buy_confirmed }}\n                      </dd>\n                    </div>\n                    <div class=\"flex flex-col\">\n                      <dt class=\"text-gray-500 md:text-lg dark:text-gray-400\">\n                        최근 매도 거래\n                      </dt>\n                      <dd class=\"text-lg font-semibold\">\n                        주문 시간 : {{ stocks_info.sell_order_time }} 주문량 :\n                        {{ stocks_info.sell_order_amount }} 주문 금액 :\n                        {{ stocks_info.sell_order_price }}\n                        {{ stocks_info.sell_confirmed }}\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- sidebar -->\n        <div class=\"gap-5 min-w-[20rem] max-h-[42rem]\">\n          <div\n              class=\"w-full p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n          >\n            <form>\n              <div>\n                <label\n                    for=\"availability\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\"\n                >\n                  주문가능 금액\n                </label>\n                <p class=\"font-normal text-xl text-gray-700 dark:text-gray-400\">\n                  {{ money }}\n                </p>\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"trade\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-400\"\n                >\n                  매수/매도\n                </label>\n                <select\n                    id=\"trade\"\n                    v-model=\"trade\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                >\n                  <option value=\"sell\">매도</option>\n                  <option value=\"but\">매수</option>\n                </select>\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"order_amount\"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                >수량(1 단위)</label\n                >\n                <input\n                    type=\"number\"\n                    v-model=\"order_amount\"\n                    id=\"order_amount\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"0\"\n                    required\n                />\n              </div>\n              <div class=\"my-3\">\n                <label\n                    for=\"order_price \"\n                    class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                >주문가격</label\n                >\n                <input\n                    type=\"number\"\n                    v-model=\"order_price\"\n                    id=\"order_price\"\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"0\"\n                    required\n                />\n              </div>\n              <div class=\"flex flex-col\">\n                <button\n                    v-on:click=\"order\"\n                    class=\"text-white font-bold bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                >\n                  주문\n                </button>\n              </div>\n              <div class=\"flex flex-col\">\n                <div class=\"my-3\">\n                  <label\n                      for=\"order_price \"\n                      class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-white\"\n                  >{{ order_success }}</label\n                  >\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div\n              class=\"w-full max-w-md p-4 bg-white border rounded-lg shadow-md sm:p-8 dark:bg-gray-800 dark:border-gray-700\"\n          >\n            <div class=\"flex items-center justify-between mb-4\">\n              <h5\n                  class=\"text-xl font-bold leading-none text-gray-900 dark:text-white\"\n              >\n                거래 지표?\n              </h5>\n              <div class=\"flex flex-col\">\n                <button\n                    v-on:click=\"button_click\"\n                    class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                >\n                  offchart 변경\n                </button>\n              </div>\n            </div>\n            <div class=\"flow-root\">\n              <ul\n                  role=\"list\"\n                  class=\"divide-y divide-gray-200 dark:divide-gray-700\"\n              >\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        전일 거래량(24H)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][5]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        고가(당일)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][2]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        저가(당일)\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 1][3]\n                      }}\n                    </div>\n                  </div>\n                </li>\n                <li class=\"py-3 sm:py-2\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p\n                          class=\"text-sm font-medium text-gray-900 truncate dark:text-white\"\n                      >\n                        전일종가\n                      </p>\n                    </div>\n                    <div\n                        class=\"inline-flex items-center text-base font-semibold text-gray-900 dark:text-white\"\n                    >\n                      {{\n                        this.chart[\"ohlcv\"][this.chart[\"ohlcv\"].length - 2][4]\n                      }}\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TradingVue from \"trading-vue-js\";\nimport Overlays from \"tvjs-overlays\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"app\",\n  components: { TradingVue },\n  methods: {\n    order() {\n      //console(this.trade, this.stock_code, this.order_amount, this.order_price);\n      if (this.order_amount * this.order_price > this.money) {\n        this.order_success = \"주문실패\";\n      } else {\n        this.order_success = \"주문성공\";\n        axios\n            .post(\"/api/stock/order/\", {\n              trade: this.trade,\n              stock_code: this.stock_code,\n              order_amount: this.order_amount,\n              order_price: this.order_price,\n            })\n            .then((res) => {\n              console.log(res.data);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        axios\n            .get(\"/api/user/money/\", {})\n            .then((res) => {\n              console.log(res.data);\n              this.money = res.data[\"money\"];\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n\n        axios\n            .post(\"/api/trade/confirm/\", {\n              stock_code: this.stock_code,\n            })\n            .then((res) => {\n              res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n              res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n              res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n              res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n\n              if (res.data[\"buy_confirmed\"] == 1) {\n                res.data[\"buy_confirmed\"] = \"체결\";\n              } else {\n                res.data[\"buy_confirmed\"] = \"미체결\";\n              }\n              if (res.data[\"sell_confirmed\"] == 1) {\n                res.data[\"sell_confirmed\"] = \"체결\";\n              } else {\n                res.data[\"sell_confirmed\"] = \"미체결\";\n              }\n              this.stocks_info = res.data;\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n      }\n    },\n    button_click() {\n      this.count += 1;\n      const types = [\"RSI\", \"MOM\", \"BBW\", \"MFI\"];\n      const names = [\n        \"Relative Strength Index, 20\",\n        \"Momentum, 10\",\n        \"Bollinger Bands Width, 20\",\n        \"Money Flow Index, 14\",\n      ];\n      if (this.count % 4 == 1) {\n        this.chart[\"offchart\"][0][\"name\"] = names[1];\n        this.chart[\"offchart\"][0][\"type\"] = types[1];\n        this.chart[\"offchart\"][0][\"data\"] = this.MOM(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 2) {\n        this.chart[\"offchart\"][0][\"name\"] = names[2];\n        this.chart[\"offchart\"][0][\"type\"] = types[2];\n        this.chart[\"offchart\"][0][\"data\"] = this.BBW(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 3) {\n        this.chart[\"offchart\"][0][\"name\"] = names[3];\n        this.chart[\"offchart\"][0][\"type\"] = types[3];\n        this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n      }\n      if (this.count % 4 == 0) {\n        this.chart[\"offchart\"][0][\"name\"] = names[0];\n        this.chart[\"offchart\"][0][\"type\"] = types[0];\n        this.chart[\"offchart\"][0][\"data\"] = this.RSI(this.chart[\"ohlcv\"]);\n      }\n    },\n    //MFI,BBW,MOM,RSI\n    SMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          data.push([ohlcv[i][0], average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    EMA(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n          const multiplier = 2 / 21;\n          const EMA = ohlcv[i][4] * multiplier + average * (1 - multiplier);\n          data.push([ohlcv[i][0], EMA]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MOM(ohlcv) {\n      var data = [];\n      var before_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 10) {\n          const momentum = ohlcv[i][4] / before_data[0];\n          data.push([ohlcv[i][0], momentum * 100]);\n          before_data.shift();\n          before_data.push(ohlcv[i][4]);\n          continue;\n        }\n        before_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BBW(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([ohlcv[i][0], (upper_limit - lower_limit) / average]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    BB(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          const result = close_data.reduce(function add(sum, currValue) {\n            return sum + currValue;\n          }, 0);\n          const average = result / close_data.length;\n\n          var devTotal = 0; // 편차\n          for (var j = 0; j < close_data.length; j++) {\n            var dev = close_data[j] - average;\n            devTotal += dev * dev;\n          }\n\n          var sStdDev = Math.sqrt(devTotal / (close_data.length - 1)); // 표본표준편차\n          const upper_limit = average + sStdDev * 2;\n          const lower_limit = average - sStdDev * 2;\n          data.push([\n            ohlcv[i][0],\n            lower_limit,\n            (upper_limit - lower_limit) / average,\n            upper_limit,\n          ]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    MFI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      var high_data = [];\n      var low_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 5) {\n          const TP = (ohlcv[i][2] + ohlcv[i][3] + ohlcv[i][4]) / 3;\n          var PMF = 0;\n          var NMF = 0;\n          for (var j = 0; j < close_data.length; j++) {\n            const MF = (close_data[j] + high_data[j] + low_data[j]) / 3;\n            if (TP < MF) PMF += MF;\n            else NMF += MF;\n          }\n          const MFR = PMF / NMF;\n          const MFI = MFR / (1 + MFR);\n          data.push([ohlcv[i][0], MFI * 100]);\n          close_data.shift();\n          high_data.shift();\n          low_data.shift();\n          close_data.push(ohlcv[i][4]);\n          high_data.push(ohlcv[i][2]);\n          low_data.push(ohlcv[i][3]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        high_data.push(ohlcv[i][2]);\n        low_data.push(ohlcv[i][3]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n    RSI(ohlcv) {\n      //console.log(ohlcv);\n      var data = [];\n      var close_data = [];\n      let count = 0;\n      for (var i = 0; i < ohlcv.length; i++) {\n        if (count == 20) {\n          var AU = 0;\n          var AD = 0;\n          for (var j = 0; j < close_data.length - 1; j++) {\n            const diff = close_data[j + 1] - close_data[j];\n            if (diff > 0) AU += diff;\n            else AD += diff * -1;\n          }\n          const RS = AU / AD;\n          const RSI = RS / (1 + RS);\n          data.push([ohlcv[i][0], RSI * 100]);\n          close_data.shift();\n          close_data.push(ohlcv[i][4]);\n          continue;\n        }\n        close_data.push(ohlcv[i][4]);\n        count++;\n      }\n      for (var k = 0; k < data.length; k++) {\n        //console.log(data[k]);\n      }\n      return data;\n    },\n  },\n  created() {\n    axios\n        .post(\"/api/stock/info/\", {\n          stock_code: this.stock_code,\n        })\n        .then((res) => {\n          console.log(res.data);\n          this.corp = res.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .post(\"/api/stock/price/\", {\n          stock_code: this.stock_code,\n          group_name: \"default\",\n        })\n        .then((res) => {\n          console.log(res.data);\n          for (var i = 0; i < res.data.length; i++) {\n            this.chart[\"ohlcv\"] = [];\n            this.chart[\"ohlcv\"].push([\n              res.data[\"price_date\"],\n              res.data[\"open_price\"],\n              res.data[\"max_price\"],\n              res.data[\"min_price\"],\n              res.data[\"close_price\"],\n              res.data[\"volume\"],\n            ]);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .get(\"/api/user/money/\", {})\n        .then((res) => {\n          console.log(res.data);\n          this.money = res.data[\"money\"];\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    axios\n        .post(\"/api/trade/confirm/\", {\n          stock_code: this.stock_code,\n        })\n        .then((res) => {\n          console.log(res.data);\n          res.data[\"sell_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"sell_order_time\"].replaceAll(\"Z\", \"\");\n          res.data[\"buy_order_time\"].replaceAll(\"T\", \" \");\n          res.data[\"buy_order_time\"].replaceAll(\"Z\", \"\");\n          if (res.data[\"buy_confirmed\"] == 1) {\n            res.data[\"buy_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"buy_confirmed\"] = \"미체결\";\n          }\n          if (res.data[\"sell_confirmed\"] == 1) {\n            res.data[\"sell_confirmed\"] = \"체결\";\n          } else {\n            res.data[\"sell_confirmed\"] = \"미체결\";\n          }\n          this.stocks_info = res.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n    console.log(this.stock_code);\n    for (var i = 0; i < this.chart[\"ohlcv\"].length; i++) {\n      let str = this.chart[\"ohlcv\"][i][0].replaceAll(\"T15:00:00.000Z\", \"\");\n      str += \" 00:00:00\";\n      //console.log(str);\n      this.chart[\"ohlcv\"][i][0] = Math.floor(new Date(str).getTime());\n    }\n    this.chart[\"onchart\"][0][\"data\"] = this.BB(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][1][\"data\"] = this.SMA(this.chart[\"ohlcv\"]);\n    this.chart[\"onchart\"][2][\"data\"] = this.EMA(this.chart[\"ohlcv\"]);\n    this.chart[\"offchart\"][0][\"data\"] = this.MFI(this.chart[\"ohlcv\"]);\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.onResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onResize);\n  },\n  data() {\n    return {\n      stock_code: window.location.href.split(\"/\")[5],\n      corp: {},\n      money: 0,\n      order_success: \"\",\n      stocks_info: {},\n      count: 0,\n      trade: \"\",\n      order_amount: 0,\n      order_price: 0,\n      overlays: [\n        Overlays[\"MOM\"],\n        Overlays[\"SMA\"],\n        Overlays[\"EMA\"],\n        Overlays[\"BBW\"],\n        Overlays[\"MFI\"],\n        Overlays[\"RSI\"],\n        Overlays[\"BB\"],\n      ],\n      chart: {\n        ohlcv: [],\n        onchart: [\n          {\n            name: \"Bollinger Bands, 20\",\n            type: \"BB\",\n            data: [],\n            settings: {\n              color: \"#2cc6c9ab\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n          {\n            name: \"Simple Moving Average, 20\",\n            type: \"SMA\",\n            data: [],\n            settings: {\n              color: \"#0000cc\",\n            },\n          },\n          {\n            name: \"Exponential Moving Average, 20\",\n            type: \"EMA\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n            },\n          },\n        ],\n        offchart: [\n          {\n            name: \"Money Flow Index, 14\",\n            type: \"MFI\",\n            data: [],\n            settings: {\n              color: \"#ff0000\",\n              backColor: \"#2cc6c90a\",\n            },\n          },\n        ],\n      },\n      colors: {\n        colorBack: \"#fff\",\n        colorGrid: \"#eee\",\n        colorText: \"#333\",\n      },\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}